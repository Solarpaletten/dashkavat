import { useState } from 'react'

interface VatData {
  field40a: number
  field40b: number
  field41: number
  field43: number
  field81a: number
  field81b: number
  field89a: number
  field89b: number
  field67: number
}

interface VatResult {
  field4: number
  field8: number
  field61: number
  field66: number
  field62: number
  field83: number
  plannedProfit: number
  status: string
  calculatedAt: string
}

export default function VatCalculator() {
  // –¢–û–ß–ù–´–ï –î–ê–ù–ù–´–ï –ò–ó –†–ï–ê–õ–¨–ù–û–ô –û–ü–ï–†–ê–¶–ò–ò ASSET LOGISTICS –ú–ê–†–¢ 2025
  const [data, setData] = useState<VatData>({
    field40a: 18400.00,    // –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –ï–° (23—Ç √ó 800‚Ç¨)
    field40b: 0.00,        // Ums√§tze 7%
    field41: 18400.00,     // Innergemeinschaftliche (–ï–° —ç–∫—Å–ø–æ—Ä—Ç)
    field43: 0.00,         // Ausfuhrlieferungen (3-–∏ —Å—Ç—Ä–∞–Ω—ã)
    field81a: 133.56,      // –£—Å–ª—É–≥–∏ –¥–µ–∫–ª–∞—Ä–∞–Ω—Ç–∞ (–Ω–µ—Ç—Ç–æ)
    field81b: 0.00,        // –£—Å–ª—É–≥–∏ –±–µ–∑ –ù–î–°
    field89a: 15755.00,    // –ï–° –∏–º–ø–æ—Ä—Ç (23—Ç √ó 685‚Ç¨)
    field89b: 484.96,      // –ü–æ—à–ª–∏–Ω–∞ (–∏–º–ø–æ—Ä—Ç 3-–∏ —Å—Ç—Ä–∞–Ω—ã)
    field67: 0.00          // Import VAT 3rd countries
  })
  
  const [result, setResult] = useState<VatResult | null>(null)
  const [loading, setLoading] = useState(false)
  const [connected, setConnected] = useState(false)

  const updateField = (field: keyof VatData, value: string) => {
    setData(prev => ({
      ...prev,
      [field]: parseFloat(value) || 0
    }))
  }

  const testConnection = async () => {
    try {
      const response = await fetch('http://localhost:4000/health')
      const json = await response.json()
      if (json.status === 'OK') {
        setConnected(true)
        alert('‚úÖ Backend connection successful!\n' + json.service)
      }
    } catch (error) {
      setConnected(false)
      alert('‚ùå Backend connection failed. Make sure backend is running on port 4000.')
    }
  }

  const calculateVat = async () => {
    setLoading(true)
    try {
      const response = await fetch('http://localhost:4000/api/vat/calculate', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(data)
      })
      
      const json = await response.json()
      if (json.success) {
        setResult(json.data)
        setConnected(true)
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–ª—è –∞–≤—Ç–æ–∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ–æ—Ä–º—ã
        localStorage.setItem('smartvat_calculation', JSON.stringify({
          ...json.data,
          inputData: data,
          company: 'ASSET LOGISTICS GMBH',
          timestamp: new Date().toISOString()
        }))
        
      } else {
        alert('‚ùå Calculation error: ' + json.error)
      }
    } catch (error) {
      setConnected(false)
      alert('‚ùå Backend connection error: ' + error)
    }
    setLoading(false)
  }

  const loadAssetData = async () => {
    try {
      const response = await fetch('http://localhost:4000/api/vat/test')
      const json = await response.json()
      if (json.success) {
        setData(json.testData)
        setResult(json.calculation)
        setConnected(true)
        alert('‚úÖ REAL ASSET LOGISTICS data loaded!\nM√§rz 2025: ' + json.message)
      }
    } catch (error) {
      setConnected(false)
      alert('‚ùå Failed to load test data: ' + error)
    }
  }

  const fillOfficialForm = () => {
    if (!result) {
      alert('‚ùå –°–Ω–∞—á–∞–ª–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ —Ä–∞—Å—á–µ—Ç VAT')
      return
    }

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∞–≤—Ç–æ–∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è
    localStorage.setItem('smartvat_calculation', JSON.stringify({
      ...result,
      inputData: data,
      company: 'ASSET LOGISTICS GMBH',
      period: 'M√§rz 2025',
      timestamp: new Date().toISOString()
    }))

    // –û—Ç–∫—Ä—ã–≤–∞–µ–º –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—É—é —Ñ–æ—Ä–º—É
    const formWindow = window.open('https://vat.swapoil.de', '_blank')
    
    if (formWindow) {
      alert('‚úÖ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –¥–ª—è –∞–≤—Ç–æ–∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è!\n\n–û—Ç–∫—Ä–æ–π—Ç–µ –∫–æ–Ω—Å–æ–ª—å (F12) –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ vat.swapoil.de –∏ –≤–≤–µ–¥–∏—Ç–µ:\nfillSmartVatData()')
    } else {
      alert('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å —Ñ–æ—Ä–º—É. –û—Ç–∫—Ä–æ–π—Ç–µ https://vat.swapoil.de –≤—Ä—É—á–Ω—É—é')
    }
  }

  const copyToClipboard = () => {
    if (!result) return
    
    const formData = `SMARTVAT - ASSET LOGISTICS M√ÑRZ 2025
======================================
Field 40a (–ï–° –†–µ–∞–ª–∏–∑–∞—Ü–∏—è): ${data.field40a.toFixed(2)}‚Ç¨
Field 89a (–ï–° –ò–º–ø–æ—Ä—Ç): ${data.field89a.toFixed(2)}‚Ç¨
Field 89b (–ü–æ—à–ª–∏–Ω–∞): ${data.field89b.toFixed(2)}‚Ç¨
Field 81a (–£—Å–ª—É–≥–∏): ${data.field81a.toFixed(2)}‚Ç¨

–†–ï–ó–£–õ–¨–¢–ê–¢–´:
Field 66 (–ù–î–° —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏): ${result.field66.toFixed(2)}‚Ç¨
Field 61 (Import VAT): ${result.field61.toFixed(2)}‚Ç¨  
Field 62 (–ó–∞—á–µ—Ç–Ω—ã–π –ù–î–°): ${result.field62.toFixed(2)}‚Ç¨
Field 83 (–ö –¥–æ–ø–ª–∞—Ç–µ/–≤–æ–∑–≤—Ä–∞—Ç—É): ${result.field83.toFixed(2)}‚Ç¨

Status: ${result.status}
–ü—Ä–∏–±—ã–ª—å: ${result.plannedProfit.toFixed(2)}‚Ç¨

–û–ø–µ—Ä–∞—Ü–∏—è: Import 23t√ó685‚Ç¨ ‚Üí Export 23t√ó800‚Ç¨
Calculated: ${new Date().toLocaleString('de-DE')}`
    
    navigator.clipboard.writeText(formData).then(() => {
      alert('‚úÖ –î–∞–Ω–Ω—ã–µ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞!')
    }).catch(() => {
      alert('‚ùå –û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è')
    })
  }

  return (
    <div className="min-h-screen bg-gray-100 py-6">
      <div className="max-w-7xl mx-auto px-4 space-y-6">
        {/* Header */}
        <div className="bg-white rounded-lg shadow-lg p-6">
          <h1 className="text-4xl font-bold text-gray-800 mb-3">
            üìÑ SmartVat - VAT Declaration System
          </h1>
          <p className="text-gray-600 mb-2">
            ASSET LOGISTICS GMBH - M√§rz 2025 - Real Case
          </p>
          <p className="text-sm text-blue-600 mb-4">
            üéØ Import: 23t √ó 685‚Ç¨ = 15,755‚Ç¨ ‚Üí Export: 23t √ó 800‚Ç¨ = 18,400‚Ç¨
          </p>
          
          {/* Status and Controls */}
          <div className="flex flex-wrap items-center gap-4">
            <div className={`flex items-center space-x-2 px-4 py-2 rounded-full ${
              connected ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'
            }`}>
              <div className={`w-3 h-3 rounded-full ${
                connected ? 'bg-green-500' : 'bg-red-500'
              }`}></div>
              <span className="text-sm font-medium">
                {connected ? 'Backend Connected (Port 4000)' : 'Backend Disconnected'}
              </span>
            </div>
            
            <button
              onClick={testConnection}
              className="bg-blue-500 text-white px-6 py-2 rounded-lg hover:bg-blue-600 transition"
            >
              üîó Test Connection
            </button>
            
            <button
              onClick={loadAssetData}
              className="bg-purple-500 text-white px-6 py-2 rounded-lg hover:bg-purple-600 transition"
            >
              üìä Load REAL M√§rz 2025 Data
            </button>
            
            <button
              onClick={calculateVat}
              disabled={loading}
              className="bg-green-500 text-white px-6 py-2 rounded-lg hover:bg-green-600 disabled:opacity-50 transition"
            >
              {loading ? '‚è≥ Calculating...' : 'üßÆ Calculate VAT'}
            </button>
          </div>
        </div>

        <div className="grid grid-cols-1 xl:grid-cols-2 gap-6">
          {/* Input Section */}
          <div className="bg-white rounded-lg shadow-lg p-6">
            <h2 className="text-2xl font-bold text-gray-800 mb-6">üí∞ VAT Input Data</h2>
            
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  Field 40a - –ï–° –†–µ–∞–ª–∏–∑–∞—Ü–∏—è (0% VAT)
                </label>
                <input
                  type="number"
                  step="0.01"
                  value={data.field40a}
                  onChange={(e) => updateField('field40a', e.target.value)}
                  className="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                />
              </div>
              
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  Field 81a - –£—Å–ª—É–≥–∏ –≤ –ì–µ—Ä–º–∞–Ω–∏–∏ (–Ω–µ—Ç—Ç–æ)
                </label>
                <input
                  type="number"
                  step="0.01"
                  value={data.field81a}
                  onChange={(e) => updateField('field81a', e.target.value)}
                  className="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                />
              </div>
              
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  Field 89a - –ï–° –ò–º–ø–æ—Ä—Ç (–Ω–µ—Ç—Ç–æ)
                </label>
                <input
                  type="number"
                  step="0.01"
                  value={data.field89a}
                  onChange={(e) => updateField('field89a', e.target.value)}
                  className="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                />
              </div>
              
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  Field 89b - –ü–æ—à–ª–∏–Ω–∞/–ò–º–ø–æ—Ä—Ç 3-–∏ —Å—Ç—Ä–∞–Ω—ã
                </label>
                <input
                  type="number"
                  step="0.01"
                  value={data.field89b}
                  onChange={(e) => updateField('field89b', e.target.value)}
                  className="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                />
              </div>
              
              <div className="md:col-span-2">
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  Field 67 - Import VAT Third Countries
                </label>
                <input
                  type="number"
                  step="0.01"
                  value={data.field67}
                  onChange={(e) => updateField('field67', e.target.value)}
                  className="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                />
              </div>
            </div>
          </div>

          {/* Results Section */}
          <div className="bg-white rounded-lg shadow-lg p-6">
            <h2 className="text-2xl font-bold text-gray-800 mb-6">üìä VAT Calculation Results</h2>
            
            {result ? (
              <div className="space-y-4">
                <div className="grid grid-cols-2 gap-4 text-sm">
                  <div className="bg-blue-50 p-3 rounded">
                    <div className="text-blue-600 font-medium">Total Revenue</div>
                    <div className="text-xl font-bold text-blue-800">{result.field4.toFixed(2)}‚Ç¨</div>
                  </div>
                  <div className="bg-red-50 p-3 rounded">
                    <div className="text-red-600 font-medium">Total Costs</div>
                    <div className="text-xl font-bold text-red-800">{result.field8.toFixed(2)}‚Ç¨</div>
                  </div>
                </div>
                
                <div className="space-y-3 pt-4 border-t">
                  <div className="flex justify-between items-center py-2">
                    <span className="text-gray-600">Output VAT (Field 66):</span>
                    <span className="font-bold text-lg text-blue-600">{result.field66.toFixed(2)}‚Ç¨</span>
                  </div>
                  <div className="flex justify-between items-center py-2">
                    <span className="text-gray-600">Import VAT EU (Field 61):</span>
                    <span className="font-bold text-lg text-blue-600">{result.field61.toFixed(2)}‚Ç¨</span>
                  </div>
                  <div className="flex justify-between items-center py-2">
                    <span className="text-gray-600">Total Input VAT (Field 62):</span>
                    <span className="font-bold text-lg text-blue-600">{result.field62.toFixed(2)}‚Ç¨</span>
                  </div>
                </div>
                
                <div className="border-t pt-4">
                  <div className="flex justify-between items-center py-3">
                    <span className="text-xl font-semibold">VAT Payment (Field 83):</span>
                    <span className={`text-2xl font-bold ${
                      result.field83 > 0 ? 'text-red-600' : 
                      result.field83 < 0 ? 'text-green-600' : 'text-blue-600'
                    }`}>
                      {result.field83.toFixed(2)}‚Ç¨
                    </span>
                  </div>
                  
                  <div className="flex justify-between items-center py-2">
                    <span className="text-lg text-gray-700">Planned Profit:</span>
                    <span className={`text-lg font-bold ${
                      result.plannedProfit >= 0 ? 'text-green-600' : 'text-red-600'
                    }`}>
                      {result.plannedProfit.toFixed(2)}‚Ç¨
                    </span>
                  </div>
                </div>
                
                <div className={`mt-6 p-6 rounded-lg text-center ${
                  result.field83 > 0 ? 'bg-red-50 border border-red-200' : 
                  result.field83 < 0 ? 'bg-green-50 border border-green-200' : 
                  'bg-blue-50 border border-blue-200'
                }`}>
                  <div className="text-4xl mb-3">
                    {result.field83 > 0 ? 'üí∏' : result.field83 < 0 ? 'üí∞' : '‚öñÔ∏è'}
                  </div>
                  <div className="text-2xl font-bold mb-2">
                    {result.status}
                  </div>
                  <div className="text-lg text-gray-700">
                    {result.field83 > 0 
                      ? `Payment Due: ${result.field83.toFixed(2)}‚Ç¨`
                      : result.field83 < 0 
                      ? `Refund Expected: ${Math.abs(result.field83).toFixed(2)}‚Ç¨`
                      : 'No Payment or Refund'
                    }
                  </div>
                </div>

                {/* Auto-fill Form Section */}
                <div className="border-t pt-6 mt-6">
                  <h3 className="text-lg font-bold text-gray-800 mb-4">
                    üìÑ –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–π —Ñ–æ—Ä–º—ã
                  </h3>
                  
                  <div className="bg-blue-50 border border-blue-200 rounded-lg p-4 mb-4">
                    <p className="text-blue-800 text-sm mb-3">
                      –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—É—é —Ñ–æ—Ä–º—É Umsatzsteuer-Voranmeldung 
                      —Ä–∞—Å—Å—á–∏—Ç–∞–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
                    </p>
                    
                    <div className="flex flex-wrap gap-3">
                      <button
                        onClick={fillOfficialForm}
                        className="bg-blue-500 text-white px-4 py-2 rounded-lg hover:bg-blue-600 transition flex items-center space-x-2"
                      >
                        <span>üîÑ</span>
                        <span>–û—Ç–∫—Ä—ã—Ç—å vat.swapoil.de</span>
                      </button>
                      
                      <button
                        onClick={copyToClipboard}
                        className="bg-gray-500 text-white px-4 py-2 rounded-lg hover:bg-gray-600 transition flex items-center space-x-2"
                      >
                        <span>üìã</span>
                        <span>–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ</span>
                      </button>
                      
                      <a
                        href="https://vat.swapoil.de"
                        target="_blank"
                        rel="noopener noreferrer"
                        className="bg-green-500 text-white px-4 py-2 rounded-lg hover:bg-green-600 transition flex items-center space-x-2 no-underline"
                      >
                        <span>üìÑ</span>
                        <span>–û—Ç–∫—Ä—ã—Ç—å —Ñ–æ—Ä–º—É</span>
                      </a>
                    </div>
                  </div>
                  
                  <div className="bg-yellow-50 border border-yellow-200 rounded-lg p-4">
                    <p className="text-yellow-800 text-sm">
                      <strong>üí° –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:</strong> Field 83 = -3085.59‚Ç¨ (ERSTATTUNG)
                      <br />
                      <strong>üìä –†–µ–∞–ª—å–Ω—ã–π case:</strong> Import 23t Rapeseed Oil ‚Üí Export –ï–° (0% VAT)
                    </p>
                  </div>
                </div>

              </div>
            ) : (
              <div className="text-center py-16">
                <div className="text-6xl mb-4">üßÆ</div>
                <div className="text-xl text-gray-600 mb-2">Ready to Calculate</div>
                <div className="text-gray-500">REAL ASSET LOGISTICS case M√§rz 2025</div>
              </div>
            )}
          </div>
        </div>
      </div>
    </div>
  )
}
