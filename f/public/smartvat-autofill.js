// üéØ SMARTVAT AUTO-FILL SCRIPT –¥–ª—è vat.swapoil.de
// Version: M√§rz 2025 - ASSET LOGISTICS REAL CASE

console.log('üöÄ SmartVat Auto-Fill Script loaded - M√§rz 2025 Version')

// –ì–ª–æ–±–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∞–≤—Ç–æ–∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è
window.fillSmartVatData = function() {
  console.log('üßÆ Starting SmartVat Auto-Fill...')
  
  // –ü–æ–ª—É—á–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
  const savedData = localStorage.getItem('smartvat_calculation')
  if (!savedData) {
    alert('‚ùå –î–∞–Ω–Ω—ã–µ SmartVat –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!\n\n–°–Ω–∞—á–∞–ª–∞:\n1. –í—ã–ø–æ–ª–Ω–∏—Ç–µ —Ä–∞—Å—á–µ—Ç –≤ SmartVat\n2. –ù–∞–∂–º–∏—Ç–µ "–û—Ç–∫—Ä—ã—Ç—å vat.swapoil.de"\n3. –í–µ—Ä–Ω–∏—Ç–µ—Å—å —Å—é–¥–∞ –∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ fillSmartVatData()')
    return false
  }
  
  let data
  try {
    data = JSON.parse(savedData)
    console.log('üìä Loaded SmartVat data:', data)
  } catch (error) {
    alert('‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö SmartVat: ' + error.message)
    return false
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
  if (!window.location.href.includes('vat.swapoil.de') && 
      !window.location.href.includes('localhost')) {
    alert('‚ùå –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –Ω–∞ vat.swapoil.de')
    return false
  }
  
  console.log('üéØ Target page confirmed, starting field mapping...')
  
  // –§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ –∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ–ª—è
  const fillField = (selectors, value, label) => {
    for (const selector of selectors) {
      const element = document.querySelector(selector)
      if (element) {
        const oldValue = element.value
        element.value = typeof value === 'number' ? value.toFixed(2) : value
        
        // –¢—Ä–∏–≥–≥–µ—Ä–∏–º —Å–æ–±—ã—Ç–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ñ–æ—Ä–º—ã
        element.dispatchEvent(new Event('input', { bubbles: true }))
        element.dispatchEvent(new Event('change', { bubbles: true }))
        element.dispatchEvent(new Event('blur', { bubbles: true }))
        
        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è –¥–ª—è —Å–ª–æ–∂–Ω—ã—Ö —Ñ–æ—Ä–º
        element.dispatchEvent(new Event('keyup', { bubbles: true }))
        element.dispatchEvent(new Event('paste', { bubbles: true }))
        
        console.log(`‚úÖ ${label}: "${oldValue}" ‚Üí "${element.value}"`)
        return true
      }
    }
    console.warn(`‚ö†Ô∏è  ${label}: –ø–æ–ª–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ —Ñ–æ—Ä–º–µ`)
    return false
  }
  
  // –ú–ê–ü–ü–ò–ù–ì –ü–û–õ–ï–ô –¥–ª—è vat.swapoil.de (–∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ–¥ —Ä–µ–∞–ª—å–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É)
  const fieldMappings = [
    // === UMS√ÑTZE (–í–´–†–£–ß–ö–ê) ===
    {
      selectors: [
        'input[name="field40a"]', 'input[id="field40a"]', 'input[data-field="40a"]',
        '#field_40a', '#umsatz_19', 'input[placeholder*="40a"]',
        'input[data-code="40a"]', '[name="40a"]'
      ],
      value: data.inputData?.field40a || 18400.00,
      label: 'Field 40a - Ums√§tze 19% (–ï–° —ç–∫—Å–ø–æ—Ä—Ç)'
    },
    
    {
      selectors: [
        'input[name="field41a"]', 'input[id="field41a"]', 'input[data-field="41a"]',
        '#field_41a', '#innergemeinschaftlich', 'input[placeholder*="41a"]'
      ],
      value: data.inputData?.field41 || 18400.00,
      label: 'Field 41a - Innergemeinschaftliche Lieferungen'
    },
    
    // === VORSTEUER (–ó–ê–ß–ï–¢–ù–´–ô –ù–î–°) ===
    {
      selectors: [
        'input[name="field66"]', 'input[id="field66"]', 'input[data-field="66"]',
        '#field_66', '#vorsteuer_rechnungen', 'input[placeholder*="66"]'
      ],
      value: data.field66 || 0.00,
      label: 'Field 66 - Vorsteuer aus Rechnungen'
    },
    
    {
      selectors: [
        'input[name="field61"]', 'input[id="field61"]', 'input[data-field="61"]',
        '#field_61', '#import_ust_eu', 'input[placeholder*="61"]'
      ],
      value: data.field61 || 3085.59,
      label: 'Field 61 - Import-USt EU'
    },
    
    {
      selectors: [
        'input[name="field62"]', 'input[id="field62"]', 'input[data-field="62"]',
        '#field_62', '#einfuhrumsatzsteuer', 'input[placeholder*="62"]'
      ],
      value: data.field62 || 3085.59,
      label: 'Field 62 - Entrichtete Einfuhrumsatzsteuer'
    },
    
    {
      selectors: [
        'input[name="field67"]', 'input[id="field67"]', 'input[data-field="67"]',
        '#field_67', '#vorsteuer_innergemeinschaftlich', 'input[placeholder*="67"]'
      ],
      value: data.inputData?.field67 || 0.00,
      label: 'Field 67 - Vorsteuer innergemeinschaftliche Erwerbe'
    },
    
    // === ERGEBNIS ===
    {
      selectors: [
        'input[name="field83"]', 'input[id="field83"]', 'input[data-field="83"]',
        '#field_83', '#zahllast', '#erstattung', 'input[placeholder*="83"]'
      ],
      value: data.field83 || -3085.59,
      label: 'Field 83 - Zahllast/Erstattung'
    },
    
    // === EU IMPORT DATA ===
    {
      selectors: [
        'input[name="field89a"]', 'input[id="field89a"]', 'input[data-field="89a"]',
        '#field_89a', '#eu_erwerb', 'input[placeholder*="89a"]'
      ],
      value: data.inputData?.field89a || 15755.00,
      label: 'Field 89a - EU Erwerb'
    },
    
    {
      selectors: [
        'input[name="field89b"]', 'input[id="field89b"]', 'input[data-field="89b"]',
        '#field_89b', '#drittland', 'input[placeholder*="89b"]'
      ],
      value: data.inputData?.field89b || 484.96,
      label: 'Field 89b - Drittland Import'
    }
  ]
  
  // –ó–∞–ø–æ–ª–Ω—è–µ–º –≤—Å–µ –ø–æ–ª—è
  let filledCount = 0
  let foundFields = []
  
  fieldMappings.forEach(mapping => {
    if (fillField(mapping.selectors, mapping.value, mapping.label)) {
      filledCount++
      foundFields.push(mapping.label)
    }
  })
  
  // –ó–∞–ø–æ–ª–Ω—è–µ–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –∫–æ–º–ø–∞–Ω–∏–∏
  fillField(
    ['input[name="company"]', '#company', '#firma', 'input[placeholder*="Company"]'],
    'ASSET LOGISTICS GMBH',
    'Company Name'
  )
  
  fillField(
    ['input[name="period"]', '#period', '#zeitraum', 'input[placeholder*="Period"]'],
    '2025-03',
    'Period'
  )
  
  fillField(
    ['input[name="steuernummer"]', '#steuernummer', 'input[placeholder*="Steuer"]'],
    'DE987654321',
    'Steuernummer'
  )
  
  // –†–µ–∑—É–ª—å—Ç–∞—Ç –∞–≤—Ç–æ–∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è
  if (filledCount > 0) {
    const resultMessage = `‚úÖ SmartVat Auto-Fill –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!

üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´:
‚Ä¢ –ó–∞–ø–æ–ª–Ω–µ–Ω–æ –ø–æ–ª–µ–π: ${filledCount}
‚Ä¢ Field 83: ${data.field83?.toFixed(2)}‚Ç¨
‚Ä¢ Status: ${data.status}
‚Ä¢ –ö–æ–º–ø–∞–Ω–∏—è: ASSET LOGISTICS GMBH
‚Ä¢ –ü–µ—Ä–∏–æ–¥: M√§rz 2025

üéØ –û–ü–ï–†–ê–¶–ò–Ø:
Import: 23t √ó 685‚Ç¨ = 15,755‚Ç¨
Export: 23t √ó 800‚Ç¨ = 18,400‚Ç¨ (0% VAT –ï–°)

‚ö†Ô∏è –í–ê–ñ–ù–û: –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π!`

    alert(resultMessage)
    console.log('üéâ SmartVat Auto-Fill completed successfully!')
    console.log('üìã Filled fields:', foundFields)
    
    // –ü–æ–¥—Å–≤–µ—á–∏–≤–∞–µ–º –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –ø–æ–ª—è
    setTimeout(() => {
      document.querySelectorAll('input[value]:not([value=""])').forEach(input => {
        if (parseFloat(input.value) !== 0 || input.value.includes('ASSET')) {
          input.style.backgroundColor = '#dcfce7' // light green
          input.style.border = '2px solid #22c55e'
          input.style.boxShadow = '0 0 5px rgba(34, 197, 94, 0.3)'
        }
      })
    }, 500)
    
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª—é—á–µ–≤—ã—Ö –ø–æ–ª–µ–π
    setTimeout(() => {
      const field83 = document.querySelector('input[name="field83"], #field_83')
      if (field83 && Math.abs(parseFloat(field83.value) - data.field83) < 0.1) {
        console.log('‚úÖ Field 83 verification passed:', field83.value)
      } else {
        console.warn('‚ö†Ô∏è Field 83 verification failed')
      }
    }, 1000)
    
  } else {
    const errorMessage = `‚ùå –ê–≤—Ç–æ–∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å!

–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:
‚Ä¢ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ñ–æ—Ä–º—ã –∏–∑–º–µ–Ω–∏–ª–∞—Å—å
‚Ä¢ –ü–æ–ª—è –∏–º–µ—é—Ç –¥—Ä—É–≥–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è
‚Ä¢ JavaScript –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω

üîß –†—É—á–Ω–æ–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ:
Field 66: ${data.field66?.toFixed(2)}‚Ç¨
Field 61: ${data.field61?.toFixed(2)}‚Ç¨
Field 62: ${data.field62?.toFixed(2)}‚Ç¨
Field 83: ${data.field83?.toFixed(2)}‚Ç¨

üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ:
1. –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É
2. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–Ω—Å–æ–ª—å (F12)
3. –ó–∞–ø–æ–ª–Ω–∏—Ç—å –ø–æ–ª—è –≤—Ä—É—á–Ω—É—é`

    alert(errorMessage)
    console.error('‚ùå Auto-fill failed - no fields found')
    
    // –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ input –ø–æ–ª—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    console.log('üîç Available input fields on page:')
    document.querySelectorAll('input').forEach((input, index) => {
      console.log(`${index}: `, {
        name: input.name,
        id: input.id,
        placeholder: input.placeholder,
        type: input.type,
        className: input.className
      })
    })
  }
  
  return filledCount > 0
}

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
window.addEventListener('load', function() {
  console.log('üåê Page loaded, checking for SmartVat data...')
  
  const hasData = localStorage.getItem('smartvat_calculation')
  
  if (hasData && (window.location.href.includes('vat.swapoil.de') || 
                  window.location.href.includes('localhost'))) {
    
    console.log('üìä SmartVat data found, creating auto-fill button...')
    
    // –°–æ–∑–¥–∞–µ–º floating –∫–Ω–æ–ø–∫—É
    const button = document.createElement('button')
    button.innerHTML = 'üöÄ SmartVat Auto-Fill'
    button.style.cssText = `
      position: fixed;
      top: 20px;
      right: 20px;
      z-index: 10000;
      background: linear-gradient(135deg, #22c55e, #16a34a);
      color: white;
      border: none;
      padding: 15px 25px;
      border-radius: 12px;
      font-weight: bold;
      font-size: 14px;
      cursor: pointer;
      box-shadow: 0 8px 25px rgba(34, 197, 94, 0.3);
      transition: all 0.3s ease;
      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;
    `
    
    // Hover effects
    button.onmouseover = () => {
      button.style.transform = 'translateY(-2px)'
      button.style.boxShadow = '0 12px 35px rgba(34, 197, 94, 0.4)'
    }
    button.onmouseout = () => {
      button.style.transform = 'translateY(0)'
      button.style.boxShadow = '0 8px 25px rgba(34, 197, 94, 0.3)'
    }
    
    button.onclick = () => {
      console.log('üîÑ Auto-fill button clicked')
      window.fillSmartVatData()
    }
    
    document.body.appendChild(button)
    
    console.log('‚úÖ SmartVat Auto-Fill ready!')
    console.log('üí° Use: fillSmartVatData() or click the button')
    
    // –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–∞–Ω–Ω—ã—Ö
    try {
      const data = JSON.parse(hasData)
      console.log('üìã Ready to fill with data:', {
        field83: data.field83,
        status: data.status,
        company: data.company,
        timestamp: data.timestamp
      })
    } catch (e) {
      console.warn('‚ö†Ô∏è Could not parse SmartVat data')
    }
    
  } else {
    console.log('‚ÑπÔ∏è No SmartVat data found or wrong page')
  }
})

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö —Å–∫—Ä–∏–ø—Ç–∞—Ö
if (typeof module !== 'undefined' && module.exports) {
  module.exports = { fillSmartVatData: window.fillSmartVatData }
}

console.log('‚úÖ SmartVat Auto-Fill Script initialized - M√§rz 2025 Version')
