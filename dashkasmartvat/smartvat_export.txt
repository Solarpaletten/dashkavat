=== ./data/companies.json ===
{
  "version": "2.0",
  "lastUpdated": "2025-03-31",
  "software": "IT AI SOLAR Dashka Smartvatde",
  "companies": {
    "ASSET LOGISTICS GMBH": {
      "name": "ASSET LOGISTICS GMBH",
      "address": "K√∂then, Kurze Strase 6, Germany, 06366", 
      "hrb": "189525",
      "steuernummer": "DE987654321",
      "period": "April 2025",
      "vatData": {
        "field10": 0,
        "field81a": 5000.00,
        "field81b": 0.00,
        "field41a": 0.00,
        "field41b": 8000.00,
        "field43": 2000.00,
        "field66": 950.00,
        "field62": 0.00,
        "field67": 0.00
      },
      "notes": "–°–æ–ª–Ω–µ—á–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –∏ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ"
    },
    "AI_CONSULTING": {
      "name": "AI CONSULTING GMBH",
      "address": "Tech Park 5, 80333 M√ºnchen",
      "hrb": "56789",
      "steuernummer": "DE555666777",
      "period": "April 2025",
      "vatData": {
        "field10": 0,
        "field81a": 15000.00,
        "field81b": 500.00,
        "field41a": 5000.00,
        "field41b": 12000.00,
        "field43": 0.00,
        "field66": 2850.00,
        "field62": 0.00,
        "field67": 950.00
      },
      "notes": "AI –∫–æ–Ω—Å–∞–ª—Ç–∏–Ω–≥ –∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞"
    },
    "DASHKA_SERVICES": {
      "name": "DASHKA SERVICES GMBH",
      "address": "Innovation Hub 1, 22765 Hamburg",
      "hrb": "67890",
      "steuernummer": "DE333444555",
      "period": "M√§rz 2025",
      "vatData": {
        "field10": 0,
        "field81a": 3000.00,
        "field81b": 1200.00,
        "field41a": 7500.00,
        "field41b": 4500.00,
        "field43": 1000.00,
        "field66": 570.00,
        "field62": 380.00,
        "field67": 0.00
      },
      "notes": "–£–º–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã –∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è"
    }
  },
  "metadata": {
    "totalCompanies": 4,
    "defaultCompany": "ASSET_LOGISTICS",
    "supportedPeriods": ["M√§rz 2025", "April 2025", "Mai 2025"],
    "vatRates": {
      "standard": 0.19,
      "reduced": 0.07,
      "zero": 0.00
    }
  }
}
=== ./readme/indexvat.html ===
<!DOCTYPE html>
<html>
<head>
  <meta charset="UTF-8">
  <title>SWAPOIL ‚Äî —Å—Ç–∞—Ä—Ç–æ–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞</title>
</head>
<body style="text-align:center; font-family:sans-serif;">
  <h1>üåê SWAPOIL.DE</h1>
  <p>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç.</p>
  <p><a href="http://smartvat.swapoil.de">–ü–µ—Ä–µ–π—Ç–∏ –≤ VAT-–¥–µ–∫–ª–∞—Ä–∞—Ü–∏—é</a></p>
</body>
</html>=== ./readme/vat-calculator copy.js ===
/**
 * IT AI SOLAR Dashka SmartStb - VAT Calculator Module
 * –ú–æ–¥—É–ª—å —Ä–∞—Å—á–µ—Ç–∞ –ù–î–° –¥–ª—è –Ω–µ–º–µ—Ü–∫–∏—Ö –¥–µ–∫–ª–∞—Ä–∞—Ü–∏–π
 * @author Dasha's Team & Jimmy
 * @version 2.0
 */

class VATCalculator {
    constructor() {
        this.vatRate19 = 0.19;
        this.initialized = false;
    }

    init() {
        if (this.initialized) return;
        
        this.setupEventListeners();
        this.loadDefaultData();
        this.initialized = true;
        console.log('üöÄ VAT Calculator initialized');
    }

    setupEventListeners() {
        const inputFields = [
            'field81a', 'field81b', 'field41a', 'field41b', 
            'field43', 'field66', 'field62', 'field67'
        ];

        inputFields.forEach(fieldId => {
            const element = document.getElementById(fieldId);
            if (element) {
                element.addEventListener('input', () => this.handleInputChange(fieldId));
            }
        });
    }

    handleInputChange(fieldId) {
        if (fieldId === 'field81a' || fieldId === 'field81b') {
            this.updateTotal81();
        } else if (fieldId === 'field41a' || fieldId === 'field41b') {
            this.updateTotal41();
        } else {
            this.calculateTax();
        }
    }

    getFieldValue(fieldId) {
        const element = document.getElementById(fieldId);
        return parseFloat(element?.value) || 0;
    }

    setFieldValue(fieldId, value) {
        const element = document.getElementById(fieldId);
        if (element) {
            element.value = value.toFixed(2);
        }
    }

    updateTotal81() {
        const field81a = this.getFieldValue('field81a');
        const field81b = this.getFieldValue('field81b');
        const total81 = field81a + field81b;
        
        this.setFieldValue('field81', total81);
        
        const vat81c = field81a * this.vatRate19;
        this.setFieldValue('field81c', vat81c);
        
        this.calculateTax();
    }

    updateTotal41() {
        const field41a = this.getFieldValue('field41a');
        const field41b = this.getFieldValue('field41b');
        const total41 = field41a + field41b;
        
        this.setFieldValue('field41', total41);
        
        const vat41c = field41b * this.vatRate19;
        this.setFieldValue('field41c', vat41c);
        
        this.calculateTax();
    }

    calculateTax() {
        const field81a = this.getFieldValue('field81a');
        const field41b = this.getFieldValue('field41b');
        
        const vat81c = field81a * this.vatRate19;
        const vat41c = field41b * this.vatRate19;
        const totalOutputVat = vat41c;
        
        this.setFieldValue('field81c', vat81c);
        this.setFieldValue('field41c', vat41c);
        
        const inputVat66 = this.getFieldValue('field66');
        const inputVat62 = this.getFieldValue('field62');
        const inputVat67 = this.getFieldValue('field67');
        const totalInputVat = inputVat66 + inputVat62 + inputVat67;
        
        const balance = totalOutputVat - totalInputVat;
        this.setFieldValue('field83', balance);
        
        this.calculateProfit();
        this.renderResult(balance, vat81c, vat41c, totalOutputVat, totalInputVat);
        
        return {
            balance,
            vat81c,
            vat41c,
            totalOutputVat,
            totalInputVat
        };
    }

    calculateProfit() {
        const revenue41 = this.getFieldValue('field41');
        const costs81 = this.getFieldValue('field81');
        const plannedProfit = revenue41 - costs81;
        
        this.setFieldValue('plannedProfit', plannedProfit);
        
        const profitBreakdown = document.getElementById('profitBreakdown');
        if (profitBreakdown) {
            const profitColor = plannedProfit >= 0 ? '#388e3c' : '#d32f2f';
            const profitIcon = plannedProfit >= 0 ? 'üìà' : 'üìâ';
            
            profitBreakdown.innerHTML = `
                –í—ã—Ä—É—á–∫–∞ (41): <strong style="color: #388e3c;">${revenue41.toFixed(2)} ‚Ç¨</strong><br>
                –ó–∞—Ç—Ä–∞—Ç—ã (81): <strong style="color: #d32f2f;">${costs81.toFixed(2)} ‚Ç¨</strong><br>
                ${profitIcon} <strong style="color: ${profitColor};">–ü–ª–∞–Ω–æ–≤–∞—è –ø—Ä–∏–±—ã–ª—å: ${plannedProfit.toFixed(2)} ‚Ç¨</strong>
            `;
        }
        
        return plannedProfit;
    }

    renderResult(balance, vat81c, vat41c, totalOutputVat, totalInputVat) {
        const resultDiv = document.getElementById('result');
        const resultText = document.getElementById('resultText');
        
        if (!resultDiv || !resultText) return;
        
        const field81a = this.getFieldValue('field81a');
        const field41b = this.getFieldValue('field41b');
        const revenue41 = this.getFieldValue('field41');
        const costs81 = this.getFieldValue('field81');
        const plannedProfit = revenue41 - costs81;
        
        let statusHTML = '';
        let statusColor = '';
        
        if (balance > 0) {
            statusHTML = `üí∏ –ö –î–û–ü–õ–ê–¢–ï: ${balance.toFixed(2)} ‚Ç¨`;
            statusColor = '#d32f2f';
        } else if (balance < 0) {
            statusHTML = `üí∞ –ö –í–û–ó–í–†–ê–¢–£: ${Math.abs(balance).toFixed(2)} ‚Ç¨`;
            statusColor = '#388e3c';
        } else {
            statusHTML = `‚öñÔ∏è –ë–ê–õ–ê–ù–°: 0.00 ‚Ç¨`;
            statusColor = '#1976d2';
        }
        
        resultText.innerHTML = `
            <strong style="color: ${statusColor}; font-size: 20px;">${statusHTML}</strong><br><br>
            <div style="text-align: left; background: #f5f5f5; padding: 15px; border-radius: 8px;">
                üìä <strong>–†–∞—Å—á–µ—Ç:</strong><br>
                81c (19% —Å ${field81a.toFixed(2)}‚Ç¨): ${vat81c.toFixed(2)} ‚Ç¨ <em>(–Ω–µ —É—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –≤ 83)</em><br>
                41c (19% —Å ${field41b.toFixed(2)}‚Ç¨): <strong>${vat41c.toFixed(2)} ‚Ç¨</strong><br>
                <em>–ù–∞—á–∏—Å–ª–µ–Ω–Ω—ã–π –ù–î–° –¥–ª—è 83: ${totalOutputVat.toFixed(2)} ‚Ç¨</em><br><br>
                –ó–∞—á–µ—Ç–Ω—ã–π –ù–î–° (66+62+67): <strong>${totalInputVat.toFixed(2)} ‚Ç¨</strong><br><br>
                <strong>83 = ${totalOutputVat.toFixed(2)} - ${totalInputVat.toFixed(2)} = ${balance.toFixed(2)} ‚Ç¨</strong><br><br>
                üìà <strong>–ü–ª–∞–Ω–æ–≤–∞—è –ø—Ä–∏–±—ã–ª—å:</strong> ${plannedProfit.toFixed(2)} ‚Ç¨ (–≤—ã—Ä—É—á–∫–∞ ${revenue41.toFixed(2)} ‚Ç¨ - –∑–∞—Ç—Ä–∞—Ç—ã ${costs81.toFixed(2)} ‚Ç¨)
            </div>
        `;
        
        resultDiv.style.display = 'block';
    }

    loadDefaultData() {
        const defaultData = {
            field10: 0,
            field81a: 0.00,
            field81b: 133.56,
            field41a: 18400.00,
            field41b: 0.00,
            field43: 0.00,
            field66: 25.38,
            field62: 3085.59,
            field67: 0.00
        };

        Object.entries(defaultData).forEach(([fieldId, value]) => {
            this.setFieldValue(fieldId, value);
        });

        this.updateTotal81();
        this.updateTotal41();
    }

    exportData() {
        return {
            company: {
                name: 'ASSET LOGISTICS GMBH',
                address: 'Kurze Stra√üe 6, 06366 K√∂then',
                hrb: '34481',
                steuernummer: 'DE453202061'
            },
            period: 'M√§rz 2025',
            timestamp: new Date().toISOString(),
            software: 'IT AI SOLAR Dashka SmartStb',
            data: {
                field10: this.getFieldValue('field10'),
                field81a: this.getFieldValue('field81a'),
                field81b: this.getFieldValue('field81b'),
                field81: this.getFieldValue('field81'),
                field81c: this.getFieldValue('field81c'),
                field41a: this.getFieldValue('field41a'),
                field41b: this.getFieldValue('field41b'),
                field41: this.getFieldValue('field41'),
                field41c: this.getFieldValue('field41c'),
                field43: this.getFieldValue('field43'),
                field66: this.getFieldValue('field66'),
                field62: this.getFieldValue('field62'),
                field67: this.getFieldValue('field67'),
                field83: this.getFieldValue('field83'),
                plannedProfit: this.getFieldValue('plannedProfit')
            },
            calculations: this.calculateTax()
        };
    }
}

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
let vatCalculator;

function updateTotal81() {
    vatCalculator?.updateTotal81();
}

function updateTotal41() {
    vatCalculator?.updateTotal41();
}

function calculateTax() {
    return vatCalculator?.calculateTax();
}

function loadRealData() {
    vatCalculator?.loadDefaultData();
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
document.addEventListener('DOMContentLoaded', function() {
    vatCalculator = new VATCalculator();
    vatCalculator.init();
});
=== ./readme/indexmarz.html ===
<!DOCTYPE html>
<html lang="de">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>IT AI SOLAR Dashka SmartStb - Umsatzsteuervoranmeldung M√§rz 2025</title>
    <link rel="stylesheet" href="css/dashka-styles.css">
    <meta name="description" content="VAT Declaration System for German Companies">
    <meta name="author" content="IT AI SOLAR Team - Leanid, Dashka, Jimmy">
</head>
<body>
    <div class="form-container">
        <div class="header">
            <h1>üöÄ IT AI SOLAR Dashka SmartStb</h1>
            <h2>Umsatzsteuervoranmeldung - ASSET LOGISTICS GMBH</h2>
            <div style="background: #ff6f00; color: white; padding: 8px 16px; border-radius: 20px; font-weight: bold; display: inline-block; margin-top: 10px;">M√§rz 2025</div>
            <div style="margin-top: 10px; font-size: 12px; color: #555;">
                –ú–æ–¥—É–ª—å–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ v2.0 | By Leanid (architect), Dashka (super-senior), Jimmy (developer)
            </div>
        </div>

        <div class="company-info">
            <strong>üìã –ö–æ–º–ø–∞–Ω–∏—è:</strong> ASSET LOGISTICS GMBH<br>
            <strong>üìç –ê–¥—Ä–µ—Å:</strong> Hamburg, Grosbrook 19, Germany, 20457 <br>
            <strong>üèõÔ∏è HRB:</strong> 34481<br>
            <strong>üî¢ Steuernummer:</strong> DE453202061<br>
            <strong>üìÖ Meldezeitraum:</strong> M√§rz 2025
        </div>

        <!-- –û–±—â–∏–µ –¥–∞–Ω–Ω—ã–µ -->
        <div class="section">
            <h3 class="section-header">üìù Allgemeine Angaben</h3>
            <div class="section-content">
                <div class="form-row">
                    <span class="code">10</span>
                    <span class="description">Berichtigte Anmeldung<br><small>–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –¥–µ–∫–ª–∞—Ä–∞—Ü–∏—è</small></span>
                    <div class="input-group">
                        <input type="number" id="field10" min="0" max="1" value="0">
                    </div>
                </div>
            </div>
        </div>

        <!-- –ö–û–î 81 -->
        <div class="section">
            <h3 class="section-header">üí∞ –ö–û–î 81 - Steuerpflichtige Ums√§tze (19%)</h3>
            <div class="section-content">
                <div class="subsection">
                    <div class="subsection-header">üìä –î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–¥–∞ 81</div>
                    
                    <div class="form-row">
                        <span class="code-sub">81a</span>
                        <span class="description">–¢–æ–≤–∞—Ä—ã/—É—Å–ª—É–≥–∏ –° –ù–î–° (—Å—É–º–º–∞ –±–µ–∑ –ù–î–°)<br><small>MIT MwSt (Nettobetrag)</small></span>
                        <div class="input-group">
                            <input type="number" id="field81a" step="0.01" placeholder="0.00">
                            <span style="color: #666; font-size: 12px;">‚Ç¨</span>
                        </div>
                    </div>
                    
                    <div class="form-row">
                        <span class="code-sub">81b</span>
                        <span class="description">–¢–æ–≤–∞—Ä—ã/—É—Å–ª—É–≥–∏ –ë–ï–ó –ù–î–°<br><small>OHNE MwSt</small></span>
                        <div class="input-group">
                            <input type="number" id="field81b" step="0.01" placeholder="0.00">
                            <span style="color: #666; font-size: 12px;">‚Ç¨</span>
                        </div>
                    </div>
                    
                    <div class="form-row total-row">
                        <span class="code">81</span>
                        <span class="description">–ò–¢–û–ì–û –∫–æ–¥ 81<br><small>Lieferungen und Leistungen (19%)</small></span>
                        <div class="input-group">
                            <input type="number" id="field81" class="calculated" readonly>
                            <span style="color: #666; font-size: 12px;">‚Ç¨</span>
                        </div>
                    </div>
                    
                    <div class="form-row">
                        <span class="code">81c</span>
                        <span class="description">–ù–î–°81 - –ù–∞—á–∏—Å–ª–µ–Ω–Ω—ã–π –ù–î–° —Å –∫–æ–¥–∞ 81<br><small>MwSt aus Kz 81</small></span>
                        <div class="input-group">
                            <input type="number" id="field81c" class="calculated" readonly>
                            <span style="color: #666; font-size: 12px;">‚Ç¨</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- –ö–û–î 41 -->
        <div class="section">
            <h3 class="section-header">üéØ –ö–û–î 41 - –ü–æ—Å—Ç–∞–≤–∫–∏ –∫–ª–∏–µ–Ω—Ç–∞–º</h3>
            <div class="section-content">
                <div class="subsection">
                    <div class="subsection-header">üìä –î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–¥–∞ 41</div>
                    
                    <div class="form-row">
                        <span class="code-sub">41a</span>
                        <span class="description">–í–Ω—É—Ç—Ä–∏–µ–≤—Ä–æ–ø–µ–π—Å–∫–∏–µ –ø–æ—Å—Ç–∞–≤–∫–∏ (0%)<br><small>Innergemeinschaftliche Lieferungen</small></span>
                        <div class="input-group">
                            <input type="number" id="field41a" step="0.01" placeholder="0.00">
                            <span style="color: #666; font-size: 12px;">‚Ç¨</span>
                        </div>
                    </div>
                    
                    <div class="form-row">
                        <span class="code-sub">41b</span>
                        <span class="description">–í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –ø–æ—Å—Ç–∞–≤–∫–∏ —Å –ù–î–° (–±–µ–∑ –ù–î–°)<br><small>Inlandslieferungen mit MwSt</small></span>
                        <div class="input-group">
                            <input type="number" id="field41b" step="0.01" placeholder="0.00">
                            <span style="color: #666; font-size: 12px;">‚Ç¨</span>
                        </div>
                    </div>
                    
                    <div class="form-row total-row">
                        <span class="code">41</span>
                        <span class="description">–ò–¢–û–ì–û –∫–æ–¥ 41<br><small>Innergemeinschaftliche Lieferungen</small></span>
                        <div class="input-group">
                            <input type="number" id="field41" class="calculated" readonly>
                            <span style="color: #666; font-size: 12px;">‚Ç¨</span>
                        </div>
                    </div>
                    
                    <div class="form-row">
                        <span class="code">41c</span>
                        <span class="description">–ù–î–°41 - –ù–∞—á–∏—Å–ª–µ–Ω–Ω—ã–π –ù–î–° —Å –∫–æ–¥–∞ 41<br><small>MwSt aus Kz 41</small></span>
                        <div class="input-group">
                            <input type="number" id="field41c" class="calculated" readonly>
                            <span style="color: #666; font-size: 12px;">‚Ç¨</span>
                        </div>
                    </div>
                </div>

                <div class="form-row">
                    <span class="code">43</span>
                    <span class="description">–≠–∫—Å–ø–æ—Ä—Ç –≤ —Ç—Ä–µ—Ç—å–∏ —Å—Ç—Ä–∞–Ω—ã (0%)<br><small>Ausfuhrlieferungen</small></span>
                    <div class="input-group">
                        <input type="number" id="field43" step="0.01" placeholder="0.00">
                        <span style="color: #666; font-size: 12px;">‚Ç¨</span>
                    </div>
                </div>
            </div>
        </div>

        <!-- –ó–∞—á–µ—Ç–Ω—ã–π –ù–î–° -->
        <div class="section">
            <h3 class="section-header">‚¨ÖÔ∏è Abziehbare Vorsteuerbetr√§ge (–ó–∞—á–µ—Ç–Ω—ã–π –ù–î–°)</h3>
            <div class="section-content">
                <div class="form-row">
                    <span class="code">66</span>
                    <span class="description">–ù–î–° –ø–æ —Å—á–µ—Ç–∞–º –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤<br><small>Vorsteuer aus Rechnungen</small></span>
                    <div class="input-group">
                        <input type="number" id="field66" step="0.01" placeholder="0.00">
                        <span style="color: #666; font-size: 12px;">‚Ç¨</span>
                    </div>
                </div>

                <div class="form-row">
                    <span class="code">62</span>
                    <span class="description">–£–ø–ª–∞—á–µ–Ω–Ω—ã–π –∏–º–ø–æ—Ä—Ç–Ω—ã–π –ù–î–°<br><small>Entrichtete Einfuhrumsatzsteuer</small></span>
                    <div class="input-group">
                        <input type="number" id="field62" step="0.01" placeholder="0.00">
                        <span style="color: #666; font-size: 12px;">‚Ç¨</span>
                    </div>
                </div>

                <div class="form-row">
                    <span class="code">67</span>
                    <span class="description">–ù–î–° –ø–æ –≤–Ω—É—Ç—Ä–∏–µ–≤—Ä–æ–ø–µ–π—Å–∫–∏–º –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–∏—è–º<br><small>Vorsteuer innergemeinschaftliche Erwerbe</small></span>
                    <div class="input-group">
                        <input type="number" id="field67" step="0.01" placeholder="0.00">
                        <span style="color: #666; font-size: 12px;">‚Ç¨</span>
                    </div>
                </div>
            </div>
        </div>

        <button class="calculate-btn" onclick="calculateTax()">üßÆ –†–∞—Å—Å—á–∏—Ç–∞—Ç—å –∏—Ç–æ–≥–æ–≤—É—é —Å—É–º–º—É –ù–î–°</button>

        <!-- –ü–õ–ê–ù–û–í–ê–Ø –ü–†–ò–ë–´–õ–¨ -->
        <div class="section" style="background: linear-gradient(135deg, #fff3e0 0%, #ffe0b2 100%); border: 3px solid #ff9800;">
            <h3 class="section-header" style="background: linear-gradient(135deg, #ff9800 0%, #f57c00 100%);">üìà –ü–õ–ê–ù–û–í–ê–Ø –ü–†–ò–ë–´–õ–¨ (–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–æ—á–Ω–æ)</h3>
            <div class="section-content">
                <div class="form-row" style="background: linear-gradient(135deg, #fff8e1 0%, #ffecb3 100%); border: 2px solid #ffa000;">
                    <span style="background: #ff9800; color: white; padding: 6px 12px; border-radius: 6px; font-weight: bold;">PROFIT</span>
                    <span class="description"><strong>–ü–ª–∞–Ω–æ–≤–∞—è –ø—Ä–∏–±—ã–ª—å = –í—ã—Ä—É—á–∫–∞ (41) - –ó–∞—Ç—Ä–∞—Ç—ã (81)</strong><br><small>Orientierungsgewinn = Umsatz (41) - Kosten (81)</small><br><em>‚ö†Ô∏è –ù–µ –≤–∫–ª—é—á–∞–µ—Ç –≤—Å–µ –∑–∞—Ç—Ä–∞—Ç—ã - —Ç–æ–ª—å–∫–æ –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–æ—á–Ω–æ!</em></span>
                    <div class="input-group">
                        <input type="number" id="plannedProfit" class="calculated" readonly style="font-size: 18px; font-weight: bold; color: #e65100;">
                        <span style="color: #e65100; font-size: 14px; font-weight: bold;">‚Ç¨</span>
                    </div>
                </div>
                
                <div style="background: #f5f5f5; padding: 15px; border-radius: 8px; margin-top: 15px; font-size: 13px;">
                    <strong>üìä –î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è —Ä–∞—Å—á–µ—Ç–∞ –ø—Ä–∏–±—ã–ª–∏:</strong><br>
                    <span id="profitBreakdown"></span>
                </div>
            </div>
        </div>

        <!-- –ö–û–î 83 - –ò–¢–û–ì–û -->
        <div class="section" style="background: linear-gradient(135deg, #e8f5e8 0%, #c8e6c9 100%); border: 3px solid #4caf50;">
            <h3 class="section-header" style="background: linear-gradient(135deg, #4caf50 0%, #388e3c 100%);">üéØ –ö–û–î 83 - Zahllast (–ò–¢–û–ì–û)</h3>
            <div class="section-content">
                <div class="form-row total-row">
                    <span class="code">83</span>
                    <span class="description"><strong>–ö –¥–æ–ø–ª–∞—Ç–µ (+) / –ö –≤–æ–∑–≤—Ä–∞—Ç—É (-)</strong><br><small>Verbleibende Umsatzsteuer-Vorauszahlung</small><br><em>83 = 41c - (66 + 62 + 67)</em></span>
                    <div class="input-group">
                        <input type="number" id="field83" class="calculated" readonly style="font-size: 18px; font-weight: bold;">
                        <span style="color: #666; font-size: 14px; font-weight: bold;">‚Ç¨</span>
                    </div>
                </div>
            </div>
        </div>

        <div id="result" class="result-box" style="display: none;">
            <h3>üìä –†–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞—Å—á–µ—Ç–∞ –ù–î–°:</h3>
            <p id="resultText"></p>
        </div>

        <!-- –ö–ù–û–ü–ö–ò –≠–ö–°–ü–û–†–¢–ê -->
        <div class="section" style="background: linear-gradient(135deg, #f3e5f5 0%, #e1bee7 100%); border: 3px solid #9c27b0;">
            <h3 class="section-header" style="background: linear-gradient(135deg, #9c27b0 0%, #7b1fa2 100%);">üíæ –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö</h3>
            <div class="section-content">
                <div class="export-grid">
                    <button onclick="printDeclaration()" class="export-btn export-btn-print">
                        üñ®Ô∏è –†–∞—Å–ø–µ—á–∞—Ç–∞—Ç—å –¥–µ–∫–ª–∞—Ä–∞—Ü–∏—é
                    </button>
                    
                    <button onclick="exportToPDF()" class="export-btn export-btn-pdf">
                        üìÑ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ PDF
                    </button>
                    
                    <button onclick="exportToExcel()" class="export-btn export-btn-excel">
                        üìä –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ Excel
                    </button>
                    
                    <button onclick="exportToJSON()" class="export-btn export-btn-json">
                        üíæ –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö JSON
                    </button>
                </div>
                
                <div style="background: #f5f5f5; padding: 15px; border-radius: 8px; margin-top: 15px; font-size: 12px; color: #666;">
                    <strong>üìã –ú–æ–¥—É–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞:</strong><br>
                    üñ®Ô∏è –ü–µ—á–∞—Ç—å - –º–æ–¥—É–ª—å export-manager.js<br>
                    üìÑ PDF - –≤—Å—Ç—Ä–æ–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –±—Ä–∞—É–∑–µ—Ä–∞<br>
                    üìä Excel - CSV —ç–∫—Å–ø–æ—Ä—Ç —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π —Ä—É—Å—Å–∫–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤<br>
                    üíæ JSON - –ø–æ–ª–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–π<br>
                    üîÑ –ö–æ–º–ø–∞–Ω–∏–∏ - –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∞ –∏–∑ data/companies.json
                </div>
            </div>
        </div>

        <!-- Footer -->
        <div style="text-align: center; margin-top: 30px; padding: 20px; background: #f5f5f5; border-radius: 8px; font-size: 12px; color: #666;">
            <strong>üöÄ IT AI SOLAR Dashka SmartStb v2.0</strong><br>
            <!-- –ú–æ–¥—É–ª—å–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ | Deployed via /solar/deploy.yml<br> -->
            <strong>Team:</strong> Leanid (architect) ‚Üí Dasha (senior) ‚Üí Jimmy (developer)<br>
            <!-- <strong>Modules:</strong> vat-calculator.js | export-manager.js | data-loader.js | dashka-styles.css -->
        </div>
    </div>

    <!-- –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –º–æ–¥—É–ª—å–Ω—ã—Ö —Å–∫—Ä–∏–ø—Ç–æ–≤ -->
    <script src="js/data-loader.js"></script>
    <script src="js/vat-calculator.js"></script>
    <script src="js/export-manager.js"></script>
    
    <script>
        // –ì–ª–æ–±–∞–ª—å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
        window.addEventListener('load', function() {
            console.log('üöÄ IT AI SOLAR Dashka SmartStb v2.0 - Fully Loaded');
            console.log('üìÅ Modular Architecture Active');
            console.log('üë• Team: Leonid ‚Üí Dasha ‚Üí Claude ‚Üí Jimmy');
        });
    </script>
</body>
</html>
=== ./js/data-loader.js ===
/**
 * IT AI SOLAR Dashka SmartStb - Data Loader
 * –ú–æ–¥—É–ª—å –∑–∞–≥—Ä—É–∑–∫–∏ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã–º–∏ –∫–æ–º–ø–∞–Ω–∏–π
 * @author Jimmy & Dasha's Team
 * @version 2.0
 */

class DataLoader {
    constructor() {
        this.companiesData = null;
        this.currentCompany = 'ASSET_LOGISTICS';
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≥—Ä—É–∑—á–∏–∫–∞ –¥–∞–Ω–Ω—ã—Ö
     */
    async init() {
        try {
            await this.loadCompaniesData();
            this.setupCompanySelector();
            console.log('üìä Data Loader initialized');
        } catch (error) {
            console.warn('‚ö†Ô∏è Could not load companies data, using defaults');
            this.loadDefaultData();
        }
    }

    /**
     * –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∫–æ–º–ø–∞–Ω–∏–π –∏–∑ JSON
     */
    async loadCompaniesData() {
        try {
            const response = await fetch('./data/companies.json');
            this.companiesData = await response.json();
        } catch (error) {
            throw new Error('Failed to load companies data');
        }
    }

    /**
     * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–µ–ª–µ–∫—Ç–æ—Ä–∞ –∫–æ–º–ø–∞–Ω–∏–π
     */
    setupCompanySelector() {
        // –î–æ–±–∞–≤–ª—è–µ–º —Å–µ–ª–µ–∫—Ç–æ—Ä –∫–æ–º–ø–∞–Ω–∏–π –≤ header –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
        const header = document.querySelector('.header');
        if (header && this.companiesData && !document.getElementById('companySelector')) {
            const selectorHTML = `
                <div style="margin-top: 15px;">
                    <select id="companySelector" style="
                        padding: 8px 12px; 
                        border-radius: 6px; 
                        border: 2px solid #1976d2;
                        background: white;
                        font-weight: bold;
                    ">
                        ${Object.keys(this.companiesData.companies).map(key => 
                            `<option value="${key}">${this.companiesData.companies[key].name}</option>`
                        ).join('')}
                    </select>
                </div>
            `;
            header.insertAdjacentHTML('beforeend', selectorHTML);
            
            // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–æ–º–ø–∞–Ω–∏–∏
            document.getElementById('companySelector').addEventListener('change', (e) => {
                this.loadCompanyData(e.target.value);
            });
        }
    }

    /**
     * –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∫–æ–º–ø–∞–Ω–∏–∏
     */
    loadCompanyData(companyKey) {
        if (!this.companiesData || !this.companiesData.companies[companyKey]) {
            console.warn(`Company ${companyKey} not found`);
            return;
        }

        const company = this.companiesData.companies[companyKey];
        this.currentCompany = companyKey;

        // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–ø–∞–Ω–∏–∏
        this.updateCompanyInfo(company);

        // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä
        if (window.vatCalculator && company.vatData) {
            Object.entries(company.vatData).forEach(([fieldId, value]) => {
                window.vatCalculator.setFieldValue(fieldId, value);
            });

            window.vatCalculator.updateTotal81();
            window.vatCalculator.updateTotal41();
        }
    }

    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–æ–º–ø–∞–Ω–∏–∏ –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ
     */
    updateCompanyInfo(company) {
        const companyInfoDiv = document.querySelector('.company-info');
        if (companyInfoDiv) {
            companyInfoDiv.innerHTML = `
                <strong>üìã –ö–æ–º–ø–∞–Ω–∏—è:</strong> ${company.name}<br>
                <strong>üìç –ê–¥—Ä–µ—Å:</strong> ${company.address}<br>
                <strong>üèõÔ∏è HRB:</strong> ${company.hrb}<br>
                <strong>üî¢ Steuernummer:</strong> ${company.steuernummer}<br>
                <strong>üìÖ Meldezeitraum:</strong> ${company.period || 'M√§rz 2025'}
            `;
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
        const headerH2 = document.querySelector('.header h2');
        if (headerH2) {
            headerH2.textContent = `Umsatzsteuervoranmeldung - ${company.name}`;
        }
    }

    /**
     * –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
     */
    loadDefaultData() {
        const defaultCompany = {
            name: 'ASSET LOGISTICS GMBH',
            address: 'Kurze Stra√üe 6, 06366 K√∂then',
            hrb: '34481',
            steuernummer: 'DE453202061',
            period: 'M√§rz 2025',
            vatData: {
                field10: 0,
                field81a: 0.00,
                field81b: 133.56,
                field41a: 18400.00,
                field41b: 0.00,
                field43: 0.00,
                field66: 25.38,
                field62: 3085.59,
                field67: 0.00
            }
        };

        this.updateCompanyInfo(defaultCompany);

        // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä
        if (window.vatCalculator) {
            Object.entries(defaultCompany.vatData).forEach(([fieldId, value]) => {
                window.vatCalculator.setFieldValue(fieldId, value);
            });

            window.vatCalculator.updateTotal81();
            window.vatCalculator.updateTotal41();
        }
    }

    /**
     * –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–µ–∫—É—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö
     */
    saveCurrentData() {
        if (!window.vatCalculator) return null;

        return {
            company: this.currentCompany,
            timestamp: new Date().toISOString(),
            data: window.vatCalculator.exportData()
        };
    }

    /**
     * –≠–∫—Å–ø–æ—Ä—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏
     */
    exportCompanyTemplate() {
        const template = {
            "COMPANY_KEY": {
                "name": "COMPANY NAME",
                "address": "Address",
                "hrb": "HRB Number",
                "steuernummer": "DE000000000",
                "period": "M√§rz 2025",
                "vatData": {
                    "field10": 0,
                    "field81a": 0.00,
                    "field81b": 0.00,
                    "field41a": 0.00,
                    "field41b": 0.00,
                    "field43": 0.00,
                    "field66": 0.00,
                    "field62": 0.00,
                    "field67": 0.00
                }
            }
        };

        const jsonString = JSON.stringify(template, null, 2);
        const blob = new Blob([jsonString], { type: 'application/json' });
        const link = document.createElement('a');
        const url = URL.createObjectURL(blob);
        
        link.setAttribute('href', url);
        link.setAttribute('download', 'company_template.json');
        link.style.visibility = 'hidden';
        
        document.body.appendChild(link);
        link.click();
        document.body.removeChild(link);
        
        URL.revokeObjectURL(url);
    }
}

// –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä
let dataLoader;

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ DOM
document.addEventListener('DOMContentLoaded', function() {
    dataLoader = new DataLoader();
    // –î–∞–µ–º –≤—Ä–µ–º—è –Ω–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª–µ–π
    setTimeout(() => {
        dataLoader.init();
    }, 200);
});
=== ./js/vat-calculator.js ===
/**
 * IT AI SOLAR Dashka SmartStb - VAT Calculator Module
 * –ú–æ–¥—É–ª—å —Ä–∞—Å—á–µ—Ç–∞ –ù–î–° –¥–ª—è –Ω–µ–º–µ—Ü–∫–∏—Ö –¥–µ–∫–ª–∞—Ä–∞—Ü–∏–π
 * @author Dasha's Team & Jimmy
 * @version 2.0
 */

class VATCalculator {
    constructor() {
        this.vatRate19 = 0.19;
        this.initialized = false;
    }

    init() {
        if (this.initialized) return;
        
        this.setupEventListeners();
        this.loadDefaultData();
        this.initialized = true;
        console.log('üöÄ VAT Calculator initialized');
    }

    setupEventListeners() {
        const inputFields = [
            'field81a', 'field81b', 'field41a', 'field41b', 
            'field43', 'field66', 'field62', 'field67'
        ];

        inputFields.forEach(fieldId => {
            const element = document.getElementById(fieldId);
            if (element) {
                element.addEventListener('input', () => this.handleInputChange(fieldId));
            }
        });
    }

    handleInputChange(fieldId) {
        if (fieldId === 'field81a' || fieldId === 'field81b') {
            this.updateTotal81();
        } else if (fieldId === 'field41a' || fieldId === 'field41b') {
            this.updateTotal41();
        } else {
            this.calculateTax();
        }
    }

    getFieldValue(fieldId) {
        const element = document.getElementById(fieldId);
        return parseFloat(element?.value) || 0;
    }

    setFieldValue(fieldId, value) {
        const element = document.getElementById(fieldId);
        if (element) {
            element.value = value.toFixed(2);
        }
    }

    updateTotal81() {
        const field81a = this.getFieldValue('field81a');
        const field81b = this.getFieldValue('field81b');
        const total81 = field81a + field81b;
        
        this.setFieldValue('field81', total81);
        
        const vat81c = field81a * this.vatRate19;
        this.setFieldValue('field81c', vat81c);
        
        this.calculateTax();
    }

    updateTotal41() {
        const field41a = this.getFieldValue('field41a');
        const field41b = this.getFieldValue('field41b');
        const total41 = field41a + field41b;
        
        this.setFieldValue('field41', total41);
        
        const vat41c = field41b * this.vatRate19;
        this.setFieldValue('field41c', vat41c);
        
        this.calculateTax();
    }

    calculateTax() {
        const field81a = this.getFieldValue('field81a');
        const field41b = this.getFieldValue('field41b');
        
        const vat81c = field81a * this.vatRate19;
        const vat41c = field41b * this.vatRate19;
        const totalOutputVat = vat41c;
        
        this.setFieldValue('field81c', vat81c);
        this.setFieldValue('field41c', vat41c);
        
        const inputVat66 = this.getFieldValue('field66');
        const inputVat62 = this.getFieldValue('field62');
        const inputVat67 = this.getFieldValue('field67');
        const totalInputVat = inputVat66 + inputVat62 + inputVat67;
        
        const balance = totalOutputVat - totalInputVat;
        this.setFieldValue('field83', balance);
        
        this.calculateProfit();
        this.renderResult(balance, vat81c, vat41c, totalOutputVat, totalInputVat);
        
        console.log('[–ù–î–°-—Ä–∞—Å—á–µ—Ç] –ò—Ç–æ–≥–æ: ', { totalOutputVat, totalInputVat, balance });

        return {
            balance,
            vat81c,
            vat41c,
            totalOutputVat,
            totalInputVat
        };
    }

    calculateProfit() {
        const revenue41 = this.getFieldValue('field41');
        const costs81 = this.getFieldValue('field81');
        const plannedProfit = revenue41 - costs81;
        
        this.setFieldValue('plannedProfit', plannedProfit);
        
        const profitBreakdown = document.getElementById('profitBreakdown');
        if (profitBreakdown) {
            const profitColor = plannedProfit >= 0 ? '#388e3c' : '#d32f2f';
            const profitIcon = plannedProfit >= 0 ? 'üìà' : 'üìâ';
            
            profitBreakdown.innerHTML = `
                –í—ã—Ä—É—á–∫–∞ (41): <strong style="color: #388e3c;">${revenue41.toFixed(2)} ‚Ç¨</strong><br>
                –ó–∞—Ç—Ä–∞—Ç—ã (81): <strong style="color: #d32f2f;">${costs81.toFixed(2)} ‚Ç¨</strong><br>
                ${profitIcon} <strong style="color: ${profitColor};">–ü–ª–∞–Ω–æ–≤–∞—è –ø—Ä–∏–±—ã–ª—å: ${plannedProfit.toFixed(2)} ‚Ç¨</strong>
            `;
        }
        
        return plannedProfit;
    }

    renderResult(balance, vat81c, vat41c, totalOutputVat, totalInputVat) {
        const resultDiv = document.getElementById('result');
        const resultText = document.getElementById('resultText');
        
        if (!resultDiv || !resultText) return;
        
        const field81a = this.getFieldValue('field81a');
        const field41b = this.getFieldValue('field41b');
        const revenue41 = this.getFieldValue('field41');
        const costs81 = this.getFieldValue('field81');
        const plannedProfit = revenue41 - costs81;
        
        let statusHTML = '';
        let statusColor = '';
        
        if (balance > 0) {
            statusHTML = `üí∏ –ö –î–û–ü–õ–ê–¢–ï: ${balance.toFixed(2)} ‚Ç¨`;
            statusColor = '#d32f2f';
        } else if (balance < 0) {
            statusHTML = `üí∞ –ö –í–û–ó–í–†–ê–¢–£: ${Math.abs(balance).toFixed(2)} ‚Ç¨`;
            statusColor = '#388e3c';
        } else {
            statusHTML = `‚öñÔ∏è –ë–ê–õ–ê–ù–°: 0.00 ‚Ç¨`;
            statusColor = '#1976d2';
        }
        
        resultText.innerHTML = `
            <strong style="color: ${statusColor}; font-size: 20px;">${statusHTML}</strong><br><br>
            <div style="text-align: left; background: #f5f5f5; padding: 15px; border-radius: 8px;">
                üìä <strong>–†–∞—Å—á–µ—Ç:</strong><br>
                81c (19% —Å ${field81a.toFixed(2)}‚Ç¨): ${vat81c.toFixed(2)} ‚Ç¨ <em>(–Ω–µ —É—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –≤ 83)</em><br>
                41c (19% —Å ${field41b.toFixed(2)}‚Ç¨): <strong>${vat41c.toFixed(2)} ‚Ç¨</strong><br>
                <em>–ù–∞—á–∏—Å–ª–µ–Ω–Ω—ã–π –ù–î–° –¥–ª—è 83: ${totalOutputVat.toFixed(2)} ‚Ç¨</em><br><br>
                –ó–∞—á–µ—Ç–Ω—ã–π –ù–î–° (66+62+67): <strong>${totalInputVat.toFixed(2)} ‚Ç¨</strong><br><br>
                <strong>83 = ${totalOutputVat.toFixed(2)} - ${totalInputVat.toFixed(2)} = ${balance.toFixed(2)} ‚Ç¨</strong><br><br>
                üìà <strong>–ü–ª–∞–Ω–æ–≤–∞—è –ø—Ä–∏–±—ã–ª—å:</strong> ${plannedProfit.toFixed(2)} ‚Ç¨ (–≤—ã—Ä—É—á–∫–∞ ${revenue41.toFixed(2)} ‚Ç¨ - –∑–∞—Ç—Ä–∞—Ç—ã ${costs81.toFixed(2)} ‚Ç¨)
            </div>
        `;
        
        resultDiv.style.display = 'block';
    }

    loadDefaultData() {
        const defaultData = {
            field10: 0,
            field40a: 18400.00,
            field40b: 0.00,
            field41: 0.00,
            field43: 0.00,
            field4: 18400.00,
            field81a: 133.56, // –í–µ—Å—å –ù–î–° –ø–æ –ø–æ–∫—É–ø–∫–µ –≤ –ì–µ—Ä–º–∞–Ω–∏–∏
            field81b: 0, // –≠—Ç–æ —É –Ω–∞—Å –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –∏ —É—Å–ª—É–≥ –≤–Ω—É—Ç—Ä–∏ –ì–µ—Ä–º–∞–Ω–∏–∏ –±–µ–∑ –ù–î–° –∑–¥–µ—Å—å —Ç–æ–ª—å–∫–æ —Ç–æ–≤–∞—Ä –±–µ–∑ –ù–î–°
            field89a: 15755.00, // –≠—Ç–æ —É –Ω–∞—Å –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –≤–Ω—É—Ç—Ä–∏ –ï–≤—Ä–æ—Å–æ—é–∑–∞ –ø–æ –Ω—É–ª–µ–≤–æ–π —Å—Ç–∞–≤–∫–∏ –ù–î–° –æ—Ç—Ä–∞–∂–∞–µ—Ç—Å—è –Ω–∞—á–∏—Å–ª–µ–Ω—ã –≤ —Å—Ç—Ä–æ–∫–µ 61
            field89b: 484.96, // –æ–ø–ª–∞—Ç–∞ –ø–æ—à–ª–∏–Ω—ã –∫–æ—Ç–æ—Ä—ã–µ –¥–æ–±–∞–≤–ª—è—é—Ç—Å—è –∫ —Å–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∏–º–ø–æ—Ä—Ç–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ 
            field83: 0.00, // —ç—Ç–æ —É –Ω–∞—Å
            field8: 16373.52, // 133,56+15755+484,96
            field66: 25.38, // —Å—É–º–º–∞ –ù–î–°  
            field61: 3085.59, // (15755+484.96)*19/100=3085,59
            field67: 0,
            field62: 3110.97 // 25,38+3085,59+0=3110,97
        };

        Object.entries(defaultData).forEach(([fieldId, value]) => {
            this.setFieldValue(fieldId, value);
        });

        this.updateTotal81();
        this.updateTotal41();
    }

    exportData() {
        return {
            company: {
                name: 'ASSET LOGISTICS GMBH',
                address: 'Kurze Stra√üe 6, 06366 K√∂then',
                hrb: '34481',
                steuernummer: 'DE453202061'
            },
            period: 'M√§rz 2025',
            timestamp: new Date().toISOString(),
            software: 'IT AI SOLAR Dashka SmartStb',
            data: {
                field10: this.getFieldValue('field10'), // –ù–æ–º–µ—Ä –¥–µ–∫–ª–∞—Ä–∞—Ü–∏–∏
                field40a: this.getFieldValue('field40a'),// —ç—Ç–æ —É –Ω–∞—Å —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è —Å –ù–î–° –≤–Ω—É—Ç—Ä–∏ –ì–µ—Ä–º–∞–Ω–∏–∏ –û—Ç–∞—Ä –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º –æ–±—ä–µ–º —Å—É–º–º—ã –±–µ–∑ –ù–î–°
                field40b: this.getFieldValue('field40b'),// –≠—Ç–æ —É –Ω–∞—Å —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –±–µ–∑ –ù–î–° –≤–Ω—É—Ç—Ä–∏ –ì–µ—Ä–º–∞–Ω–∏–∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å—É–º–º—É –±–µ–∑ –ù–î–°
                field41: this.getFieldValue('field41'), // —ç—Ç–æ —É –Ω–∞—Å —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –≤–Ω—É—Ç—Ä–∏ –ï–≤—Ä–æ—Å–æ—é–∑–∞ –ß–µ—Ö–∏—è –ü–æ–ª—å—à–∞ –ù–æ—Ä–≤–µ–≥–∏—è –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å—É–º–º—É –±–µ–∑ –ù–î–° —Å –Ω—É–ª–µ–≤–æ–π —Å—Ç–∞–≤–∫–æ–π –ù–î–°
                field43: this.getFieldValue('field43'), // —ç—Ç–æ —É –Ω–∞—Å —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –≤ —Ç—Ä–µ—Ç—å–∏ —Å—Ç—Ä–∞–Ω—ã –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å—É–º–º—É –±–µ–∑ –ù–î–° —Å –Ω—É–ª–µ–≤–æ–π —Å—Ç–∞–≤–∫–æ–π –ù–î–°
                field4: this.getFieldValue('field4'), // –≠—Ç–æ —É –Ω–∞—Å —Å—É–º–º–∞ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ —Ç–æ–≤–∞—Ä–∞ –∏–º–µ–Ω–Ω–æ –≤—ã—Ä—É—á–∫–∏ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –æ–±—â–µ–π –≤—ã—Ä—É—á–∫–∏ –¥–ª—è —Ä–∞—Å—á—ë—Ç–∞ –ø—Ä–∏–±—ã–ª–∏ 
                field81a: this.getFieldValue('field81a'), // –£ –Ω–∞—Å –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–∏–µ –≤–Ω—É—Ç—Ä–∏ –ì–µ—Ä–º–∞–Ω–∏–∏ –∑–¥–µ—Å—å –≤–∫–ª—é—á—ë–Ω —Ç–æ–ª—å–∫–æ –Ω–µ—Ç—Ç–æ —Ç–æ–≤–∞—Ä–∞ –±–µ–∑ –ù–î–°
                field81b: this.getFieldValue('field81b'), // –≠—Ç–æ —É –Ω–∞—Å –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –∏ —É—Å–ª—É–≥ –≤–Ω—É—Ç—Ä–∏ –ì–µ—Ä–º–∞–Ω–∏–∏ –±–µ–∑ –ù–î–° –∑–¥–µ—Å—å —Ç–æ–ª—å–∫–æ —Ç–æ–≤–∞—Ä –±–µ–∑ –ù–î–° 
                field89a: this.getFieldValue('field89a'), // –ü—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–∏–µ –≤–Ω—É—Ç—Ä–∏ –ï–° –ø–æ 0% –ù–î–°
                field89b: this.getFieldValue('field89b'), // –ò–º–ø–æ—Ä—Ç–Ω—ã–µ –ø–æ—à–ª–∏–Ω—ã
                field8: this.getFieldValue('field8'), // –≠—Ç–æ —É –Ω–∞—Å —Å—É–º–º–∞ –æ–±—â–µ–≥–æ –Ω–µ—Ç—Ç–æ –ø—Ä–∏–æ–±—Ä–µ—Ç—ë–Ω–Ω–æ–≥–æ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç–∏ –ø–æ–∫—É–ø–Ω–æ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –¥–ª—è —Ä–∞—Å—á—ë—Ç–∞ –ø—Ä–∏–±—ã–ª–∏ 
                field66: this.getFieldValue('field66'), // –≠—Ç–æ —É –Ω–∞—Å —Å—É–º–º–∞ –ù–î–° —Å—Ç—Ä–æ–∫–µ 40 –∞ 
                field61: this.getFieldValue('field61'), // –≠—Ç–æ —É –Ω–∞—Å —Å—É–º–º–∞ –∏–º–ø–æ—Ä—Ç–Ω–æ–≥–æ –ù–î–° –ø—Ä–∏–æ–±—Ä–µ—Ç—ë–Ω–Ω–æ–≥–æ –≤–Ω—É—Ç—Ä–∏ –ï–≤—Ä–æ—Å–æ—é–∑–∞ —Ç–æ–≤–∞—Ä–∞ 
                field67: this.getFieldValue('field67'), // –£ –Ω–∞—Å —Å—É–º–º–∞ –∏–º–ø–æ—Ä—Ç–Ω–æ–≥–æ –ù–î–° –ø—Ä–∏–æ–±—Ä–µ—Ç—ë–Ω–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ –∏–∑ —Ç—Ä–µ—Ç—å–∏—Ö —Å—Ç—Ä–∞–Ω
                field62: this.getFieldValue('field62'), // –≠—Ç–æ —É –Ω–∞—Å —Å—É–º–º–∞ 61 66 67 
                field83: this.getFieldValue('field83'), // –°—É–º–º–∞ –ù–î–° –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ —É–ø–ª–∞—Ç–∏—Ç—å —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –∏–∑ —Å—Ç—Ä–æ–∫–∏ –±–µ—Ä—ë–º 40a –ò –º–∏–Ω—É—Å—É–µ–º –≤—Å–µ —á—Ç–æ —É –Ω–∞—Å –µ—Å—Ç—å –ø–æ –∑–∞—á–µ—Ç–Ω–æ–º –Ω–¥—Å 62 
                plannedProfit: this.getFieldValue('plannedProfit')
            },
            calculations: this.calculateTax()
        };
    }
}

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
let vatCalculator;

function updateTotal81() {
    vatCalculator?.updateTotal81();
}

function updateTotal41() {
    vatCalculator?.updateTotal41();
}

function calculateTax() {
    return vatCalculator?.calculateTax();
}

function loadRealData() {
    vatCalculator?.loadDefaultData();
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
document.addEventListener('DOMContentLoaded', function() {
    vatCalculator = new VATCalculator();
    vatCalculator.init();
});

console.log("‚úÖ Dashka SmartStb VAT Module v2.0.1 ‚Äî ready for launch");=== ./js/export-manager.js ===
/**
 * IT AI SOLAR Dashka SmartStb - Export Manager
 * –ú–æ–¥—É–ª—å —ç–∫—Å–ø–æ—Ä—Ç–∞ –¥–∞–Ω–Ω—ã—Ö –≤ —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã
 * @author Jimmy & Dasha's Team
 * @version 2.0
 */

class ExportManager {
    constructor(vatCalculator) {
        this.vatCalculator = vatCalculator;
    }

    /**
     * –ü–µ—á–∞—Ç—å –¥–µ–∫–ª–∞—Ä–∞—Ü–∏–∏
     */
    printDeclaration() {
        const exportSection = document.querySelector('.section:last-child');
        if (exportSection) {
            exportSection.style.display = 'none';
        }
        
        window.print();
        
        setTimeout(() => {
            if (exportSection) {
                exportSection.style.display = 'block';
            }
        }, 1000);
    }

    /**
     * –≠–∫—Å–ø–æ—Ä—Ç –≤ PDF
     */
    exportToPDF() {
        alert('üìÑ –§—É–Ω–∫—Ü–∏—è —ç–∫—Å–ø–æ—Ä—Ç–∞ –≤ PDF:\n\n–í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ jsPDF –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è PDF —Ñ–∞–π–ª–∞ —Å –¥–∞–Ω–Ω—ã–º–∏ –¥–µ–∫–ª–∞—Ä–∞—Ü–∏–∏.\n\n–ü–æ–∫–∞ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –ø–µ—á–∞—Ç–∏ –±—Ä–∞—É–∑–µ—Ä–∞ –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫–∞–∫ PDF.');
        this.printDeclaration();
    }

    /**
     * –≠–∫—Å–ø–æ—Ä—Ç –≤ Excel (CSV)
     */
    exportToExcel() {
        const data = this.vatCalculator.exportData();
        
        const csvData = [
            ['IT AI SOLAR Dashka SmartStb - Umsatzsteuervoranmeldung M√§rz 2025'],
            ['ASSET LOGISTICS GMBH'],
            [''],
            ['–ü–æ–ª–µ', '–û–ø–∏—Å–∞–Ω–∏–µ', '–°—É–º–º–∞ (‚Ç¨)'],
            ['10', 'Berichtigte Anmeldung', data.data.field10],
            [''],
            ['–ö–û–î 81 - Steuerpflichtige Ums√§tze'],
            ['81a', '–¢–æ–≤–∞—Ä—ã/—É—Å–ª—É–≥–∏ –° –ù–î–°', data.data.field81a],
            ['81b', '–¢–æ–≤–∞—Ä—ã/—É—Å–ª—É–≥–∏ –ë–ï–ó –ù–î–°', data.data.field81b],
            ['81', '–ò–¢–û–ì–û –∫–æ–¥ 81', data.data.field81],
            ['81c', '–ù–î–°81', data.data.field81c],
            [''],
            ['–ö–û–î 41 - –ü–æ—Å—Ç–∞–≤–∫–∏ –∫–ª–∏–µ–Ω—Ç–∞–º'],
            ['41a', '–í–Ω—É—Ç—Ä–∏–µ–≤—Ä–æ–ø–µ–π—Å–∫–∏–µ –ø–æ—Å—Ç–∞–≤–∫–∏', data.data.field41a],
            ['41b', '–í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –ø–æ—Å—Ç–∞–≤–∫–∏ —Å –ù–î–°', data.data.field41b],
            ['41', '–ò–¢–û–ì–û –∫–æ–¥ 41', data.data.field41],
            ['41c', '–ù–î–°41', data.data.field41c],
            [''],
            ['43', '–≠–∫—Å–ø–æ—Ä—Ç –≤ —Ç—Ä–µ—Ç—å–∏ —Å—Ç—Ä–∞–Ω—ã', data.data.field43],
            [''],
            ['–ó–∞—á–µ—Ç–Ω—ã–π –ù–î–°'],
            ['66', '–ù–î–° –ø–æ —Å—á–µ—Ç–∞–º –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤', data.data.field66],
            ['62', '–£–ø–ª–∞—á–µ–Ω–Ω—ã–π –∏–º–ø–æ—Ä—Ç–Ω—ã–π –ù–î–°', data.data.field62],
            ['67', '–ù–î–° –≤–Ω—É—Ç—Ä–∏–µ–≤—Ä–æ–ø–µ–π—Å–∫–∏–µ', data.data.field67],
            [''],
            ['–ò–¢–û–ì–û'],
            ['83', '–ö –¥–æ–ø–ª–∞—Ç–µ/–≤–æ–∑–≤—Ä–∞—Ç—É', data.data.field83],
            ['PROFIT', '–ü–ª–∞–Ω–æ–≤–∞—è –ø—Ä–∏–±—ã–ª—å', data.data.plannedProfit],
            [''],
            ['–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è:', new Date().toLocaleString('ru-RU')]
        ];

        this.downloadCSV(csvData, 'VAT_Declaration_M√§rz_2025.csv');
        alert('üìä –î–∞–Ω–Ω—ã–µ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã –≤ CSV —Ñ–æ—Ä–º–∞—Ç!\n\n–§–∞–π–ª –º–æ–∂–Ω–æ –æ—Ç–∫—Ä—ã—Ç—å –≤ Excel.');
    }

    /**
     * –≠–∫—Å–ø–æ—Ä—Ç –≤ JSON
     */
    exportToJSON() {
        const exportData = this.vatCalculator.exportData();
        const jsonString = JSON.stringify(exportData, null, 2);
        
        this.downloadFile(jsonString, 'VAT_Declaration_Data_M√§rz_2025.json', 'application/json');
        alert('üíæ –î–∞–Ω–Ω—ã–µ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã –≤ JSON!\n\n–§–∞–π–ª —Å–æ–¥–µ—Ä–∂–∏—Ç –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –¥–µ–∫–ª–∞—Ä–∞—Ü–∏–∏ –∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –≤ –¥—Ä—É–≥–∏–µ —Å–∏—Å—Ç–µ–º—ã.');
    }

    /**
     * –°–∫–∞—á–∏–≤–∞–Ω–∏–µ CSV —Ñ–∞–π–ª–∞
     */
    downloadCSV(data, filename) {
        let csvContent = data.map(row => 
            row.map(cell => `"${cell}"`).join(',')
        ).join('\n');

        const BOM = '\uFEFF';
        csvContent = BOM + csvContent;

        this.downloadFile(csvContent, filename, 'text/csv;charset=utf-8;');
    }

    /**
     * –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤
     */
    downloadFile(content, filename, mimeType) {
        const blob = new Blob([content], { type: mimeType });
        const link = document.createElement('a');
        const url = URL.createObjectURL(blob);
        
        link.setAttribute('href', url);
        link.setAttribute('download', filename);
        link.style.visibility = 'hidden';
        
        document.body.appendChild(link);
        link.click();
        document.body.removeChild(link);
        
        URL.revokeObjectURL(url);
    }
}

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ —ç–∫—Å–ø–æ—Ä—Ç–∞
let exportManager;

function printDeclaration() {
    exportManager?.printDeclaration();
}

function exportToPDF() {
    exportManager?.exportToPDF();
}

function exportToExcel() {
    exportManager?.exportToExcel();
}

function exportToJSON() {
    exportManager?.exportToJSON();
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ VAT Calculator
document.addEventListener('DOMContentLoaded', function() {
    setTimeout(() => {
        if (window.vatCalculator) {
            exportManager = new ExportManager(window.vatCalculator);
            console.log('üìä Export Manager initialized');
        }
    }, 100);
});
=== ./css/dashka-styles.css ===
/* IT AI SOLAR Dashka SmartStb - Complete Styles v2.0 */
body {
    font-family: Arial, sans-serif;
    max-width: 950px;
    margin: 0 auto;
    padding: 20px;
    background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
}

.form-container {
    background: white;
    padding: 30px;
    border-radius: 12px;
    box-shadow: 0 8px 25px rgba(0,0,0,0.15);
    border: 1px solid #e0e0e0;
}

.header {
    text-align: center;
    color: #1565c0;
    border-bottom: 4px solid #1976d2;
    padding-bottom: 20px;
    margin-bottom: 30px;
    background: linear-gradient(135deg, #bbdefb 0%, #e3f2fd 100%);
    margin: -30px -30px 30px -30px;
    padding: 30px;
    border-radius: 12px 12px 0 0;
}

.header h1 {
    margin: 0;
    font-size: 28px;
    text-shadow: 1px 1px 2px rgba(0,0,0,0.1);
}

.company-info {
    background: linear-gradient(135deg, #e8f5e8 0%, #f1f8e9 100%);
    padding: 20px;
    border-left: 5px solid #4caf50;
    margin-bottom: 25px;
    border-radius: 8px;
}

.section {
    margin-bottom: 25px;
    border: 2px solid #e0e0e0;
    border-radius: 8px;
    overflow: hidden;
    box-shadow: 0 3px 10px rgba(0,0,0,0.1);
}

.section-header {
    background: linear-gradient(135deg, #1976d2 0%, #1565c0 100%);
    color: white;
    padding: 15px 20px;
    font-weight: bold;
    margin: 0;
    font-size: 16px;
}

.section-content {
    padding: 20px;
    background: #fafafa;
}

.form-row {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 15px;
    padding: 12px;
    background: white;
    border-radius: 8px;
    border: 1px solid #e0e0e0;
    transition: all 0.3s ease;
}

.form-row:hover {
    box-shadow: 0 2px 8px rgba(0,0,0,0.1);
    border-color: #1976d2;
}

.subsection {
    background: linear-gradient(135deg, #fff3e0 0%, #ffe0b2 100%);
    border: 1px solid #ff9800;
    border-radius: 6px;
    padding: 15px;
    margin: 10px 0;
}

.subsection-header {
    font-weight: bold;
    color: #e65100;
    margin-bottom: 10px;
    font-size: 14px;
}

.code {
    background: linear-gradient(135deg, #2196f3 0%, #1976d2 100%);
    color: white;
    padding: 6px 12px;
    border-radius: 6px;
    font-weight: bold;
    min-width: 40px;
    text-align: center;
}

.code-sub {
    background: linear-gradient(135deg, #ff9800 0%, #f57c00 100%);
    color: white;
    padding: 4px 8px;
    border-radius: 4px;
    font-weight: bold;
    min-width: 35px;
    text-align: center;
    font-size: 12px;
}

.description {
    flex: 1;
    margin: 0 20px;
    font-size: 14px;
    line-height: 1.4;
}

.input-group {
    display: flex;
    align-items: center;
    gap: 10px;
}

input[type="number"] {
    width: 140px;
    padding: 10px;
    border: 2px solid #ddd;
    border-radius: 6px;
    text-align: right;
    font-size: 14px;
    font-weight: bold;
    transition: all 0.3s ease;
}

input[type="number"]:focus {
    border-color: #1976d2;
    outline: none;
    box-shadow: 0 0 8px rgba(25, 118, 210, 0.3);
}

.calculated {
    background: linear-gradient(135deg, #fff8e1 0%, #ffecb3 100%);
    border-color: #ffa000;
    font-weight: bold;
    color: #e65100;
}

.total-row {
    background: linear-gradient(135deg, #e8f5e8 0%, #c8e6c9 100%);
    border: 2px solid #4caf50;
    font-weight: bold;
    font-size: 16px;
}

.calculate-btn {
    background: linear-gradient(135deg, #4caf50 0%, #388e3c 100%);
    color: white;
    border: none;
    padding: 15px 30px;
    border-radius: 8px;
    cursor: pointer;
    font-size: 16px;
    font-weight: bold;
    margin: 20px 0;
    width: 100%;
    transition: all 0.3s ease;
}

.calculate-btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 6px 16px rgba(76, 175, 80, 0.4);
}

.result-box {
    background: linear-gradient(135deg, #e3f2fd 0%, #bbdefb 100%);
    border: 3px solid #2196f3;
    padding: 20px;
    border-radius: 10px;
    margin-top: 20px;
    text-align: center;
}

.vat-label {
    background: #4caf50; 
    color: white; 
    padding: 4px 8px; 
    border-radius: 4px; 
    font-size: 12px;
    font-weight: bold;
}

.export-grid {
    display: grid; 
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); 
    gap: 15px;
}

.export-btn {
    border: none; 
    padding: 15px 20px; 
    border-radius: 8px;
    cursor: pointer; 
    font-size: 14px; 
    font-weight: bold;
    transition: all 0.3s ease;
    color: white;
}

.export-btn:hover {
    transform: translateY(-2px);
}

.export-btn-print {
    background: linear-gradient(135deg, #2196f3 0%, #1976d2 100%);
}

.export-btn-pdf {
    background: linear-gradient(135deg, #f44336 0%, #d32f2f 100%);
}

.export-btn-excel {
    background: linear-gradient(135deg, #4caf50 0%, #388e3c 100%);
}

.export-btn-json {
    background: linear-gradient(135deg, #ff9800 0%, #f57c00 100%);
}

/* –°–µ–ª–µ–∫—Ç–æ—Ä –∫–æ–º–ø–∞–Ω–∏–π */
select {
    padding: 8px 12px; 
    border-radius: 6px; 
    border: 2px solid #1976d2;
    background: white;
    font-weight: bold;
}
=== ./index.html ===
<!DOCTYPE html>
<html lang="de">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>IT AI SOLAR Dashka SmartStb - Umsatzsteuervoranmeldung April 2025</title>
    <link rel="stylesheet" href="css/dashka-styles.css">
    <meta name="description" content="VAT Declaration System for German Companies">
    <meta name="author" content="IT AI SOLAR Team - Leanid, Dashka, Jimmy">
</head>
<body>
    <div class="form-container">
        <div class="header">
            <h1>üöÄ IT AI SOLAR Dashka SmartStb</h1>
            <h2>Umsatzsteuervoranmeldung - ASSET LOGISTICS GMBH</h2>
            <div style="background: #ff6f00; color: white; padding: 8px 16px; border-radius: 20px; font-weight: bold; display: inline-block; margin-top: 10px;">April 2025</div>
            <div style="margin-top: 10px; font-size: 12px; color: #555;">
                –ú–æ–¥—É–ª—å–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ v2.0 | By Leanid (architect), Dashka (super-senior), Jimmy (developer)
            </div>
        </div>

        <div class="company-info">
            <strong>üìã –ö–æ–º–ø–∞–Ω–∏—è:</strong> ASSET LOGISTICS GMBH<br>
            <strong>üìç –ê–¥—Ä–µ—Å:</strong> K√∂then, Kurze Strase 6, Germany, 06366 <br>
            <strong>üèõÔ∏è HRB:</strong> 34481<br>
            <strong>üî¢ Steuernummer:</strong> DE453202061<br>
            <strong>üìÖ Meldezeitraum:</strong> April 2025
        </div>

        <!-- –û–±—â–∏–µ –¥–∞–Ω–Ω—ã–µ -->
        <div class="section">
            <h3 class="section-header">üìù Allgemeine Angaben</h3>
            <div class="section-content">
                <div class="form-row">
                    <span class="code">10</span>
                    <span class="description">Berichtigte Anmeldung<br><small>–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –¥–µ–∫–ª–∞—Ä–∞—Ü–∏—è</small></span>
                    <div class="input-group">
                        <input type="number" id="field10" min="0" max="1" value="0">
                    </div>
                </div>
            </div>
        </div>

        <!-- –ö–û–î 81 -->
        <div class="section">
            <h3 class="section-header">üí∞ –ö–û–î 81 - Steuerpflichtige Ums√§tze (19%)</h3>
            <div class="section-content">
                <div class="subsection">
                    <div class="subsection-header">üìä –î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–¥–∞ 81</div>
                    
                    <div class="form-row">
                        <span class="code-sub">81a</span>
                        <span class="description">–¢–æ–≤–∞—Ä—ã/—É—Å–ª—É–≥–∏ –° –ù–î–° (—Å—É–º–º–∞ –±–µ–∑ –ù–î–°)<br><small>MIT MwSt (Nettobetrag)</small></span>
                        <div class="input-group">
                            <input type="number" id="field81a" step="0.01" placeholder="0.00">
                            <span style="color: #666; font-size: 12px;">‚Ç¨</span>
                        </div>
                    </div>
                    
                    <div class="form-row">
                        <span class="code-sub">81b</span>
                        <span class="description">–¢–æ–≤–∞—Ä—ã/—É—Å–ª—É–≥–∏ –ë–ï–ó –ù–î–°<br><small>OHNE MwSt</small></span>
                        <div class="input-group">
                            <input type="number" id="field81b" step="0.01" placeholder="0.00">
                            <span style="color: #666; font-size: 12px;">‚Ç¨</span>
                        </div>
                    </div>
                    
                    <div class="form-row total-row">
                        <span class="code">81</span>
                        <span class="description">–ò–¢–û–ì–û –∫–æ–¥ 81<br><small>Lieferungen und Leistungen (19%)</small></span>
                        <div class="input-group">
                            <input type="number" id="field81" class="calculated" readonly>
                            <span style="color: #666; font-size: 12px;">‚Ç¨</span>
                        </div>
                    </div>
                    
                    <div class="form-row">
                        <span class="code">81c</span>
                        <span class="description">–ù–î–°81 - –ù–∞—á–∏—Å–ª–µ–Ω–Ω—ã–π –ù–î–° —Å –∫–æ–¥–∞ 81<br><small>MwSt aus Kz 81</small></span>
                        <div class="input-group">
                            <input type="number" id="field81c" class="calculated" readonly>
                            <span style="color: #666; font-size: 12px;">‚Ç¨</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- –ö–û–î 41 -->
        <div class="section">
            <h3 class="section-header">üéØ –ö–û–î 41 - –ü–æ—Å—Ç–∞–≤–∫–∏ –∫–ª–∏–µ–Ω—Ç–∞–º</h3>
            <div class="section-content">
                <div class="subsection">
                    <div class="subsection-header">üìä –î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–¥–∞ 41</div>
                    
                    <div class="form-row">
                        <span class="code-sub">41a</span>
                        <span class="description">–í–Ω—É—Ç—Ä–∏–µ–≤—Ä–æ–ø–µ–π—Å–∫–∏–µ –ø–æ—Å—Ç–∞–≤–∫–∏ (0%)<br><small>Innergemeinschaftliche Lieferungen</small></span>
                        <div class="input-group">
                            <input type="number" id="field41a" step="0.01" placeholder="0.00">
                            <span style="color: #666; font-size: 12px;">‚Ç¨</span>
                        </div>
                    </div>
                    
                    <div class="form-row">
                        <span class="code-sub">41b</span>
                        <span class="description">–í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –ø–æ—Å—Ç–∞–≤–∫–∏ —Å –ù–î–° (–±–µ–∑ –ù–î–°)<br><small>Inlandslieferungen mit MwSt</small></span>
                        <div class="input-group">
                            <input type="number" id="field41b" step="0.01" placeholder="0.00">
                            <span style="color: #666; font-size: 12px;">‚Ç¨</span>
                        </div>
                    </div>
                    
                    <div class="form-row total-row">
                        <span class="code">41</span>
                        <span class="description">–ò–¢–û–ì–û –∫–æ–¥ 41<br><small>Innergemeinschaftliche Lieferungen</small></span>
                        <div class="input-group">
                            <input type="number" id="field41" class="calculated" readonly>
                            <span style="color: #666; font-size: 12px;">‚Ç¨</span>
                        </div>
                    </div>
                    
                    <div class="form-row">
                        <span class="code">41c</span>
                        <span class="description">–ù–î–°41 - –ù–∞—á–∏—Å–ª–µ–Ω–Ω—ã–π –ù–î–° —Å –∫–æ–¥–∞ 41<br><small>MwSt aus Kz 41</small></span>
                        <div class="input-group">
                            <input type="number" id="field41c" class="calculated" readonly>
                            <span style="color: #666; font-size: 12px;">‚Ç¨</span>
                        </div>
                    </div>
                </div>

                <div class="form-row">
                    <span class="code">43</span>
                    <span class="description">–≠–∫—Å–ø–æ—Ä—Ç –≤ —Ç—Ä–µ—Ç—å–∏ —Å—Ç—Ä–∞–Ω—ã (0%)<br><small>Ausfuhrlieferungen</small></span>
                    <div class="input-group">
                        <input type="number" id="field43" step="0.01" placeholder="0.00">
                        <span style="color: #666; font-size: 12px;">‚Ç¨</span>
                    </div>
                </div>
            </div>
        </div>

        <!-- –ó–∞—á–µ—Ç–Ω—ã–π –ù–î–° -->
        <div class="section">
            <h3 class="section-header">‚¨ÖÔ∏è Abziehbare Vorsteuerbetr√§ge (–ó–∞—á–µ—Ç–Ω—ã–π –ù–î–°)</h3>
            <div class="section-content">
                <div class="form-row">
                    <span class="code">66</span>
                    <span class="description">–ù–î–° –ø–æ —Å—á–µ—Ç–∞–º –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤<br><small>Vorsteuer aus Rechnungen</small></span>
                    <div class="input-group">
                        <input type="number" id="field66" step="0.01" placeholder="0.00">
                        <span style="color: #666; font-size: 12px;">‚Ç¨</span>
                    </div>
                </div>

                <div class="form-row">
                    <span class="code">62</span>
                    <span class="description">–£–ø–ª–∞—á–µ–Ω–Ω—ã–π –∏–º–ø–æ—Ä—Ç–Ω—ã–π –ù–î–°<br><small>Entrichtete Einfuhrumsatzsteuer</small></span>
                    <div class="input-group">
                        <input type="number" id="field62" step="0.01" placeholder="0.00">
                        <span style="color: #666; font-size: 12px;">‚Ç¨</span>
                    </div>
                </div>

                <div class="form-row">
                    <span class="code">67</span>
                    <span class="description">–ù–î–° –ø–æ –≤–Ω—É—Ç—Ä–∏–µ–≤—Ä–æ–ø–µ–π—Å–∫–∏–º –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–∏—è–º<br><small>Vorsteuer innergemeinschaftliche Erwerbe</small></span>
                    <div class="input-group">
                        <input type="number" id="field67" step="0.01" placeholder="0.00">
                        <span style="color: #666; font-size: 12px;">‚Ç¨</span>
                    </div>
                </div>
            </div>
        </div>

        <button class="calculate-btn" onclick="calculateTax()">üßÆ –†–∞—Å—Å—á–∏—Ç–∞—Ç—å –∏—Ç–æ–≥–æ–≤—É—é —Å—É–º–º—É –ù–î–°</button>

        <!-- –ü–õ–ê–ù–û–í–ê–Ø –ü–†–ò–ë–´–õ–¨ -->
        <div class="section" style="background: linear-gradient(135deg, #fff3e0 0%, #ffe0b2 100%); border: 3px solid #ff9800;">
            <h3 class="section-header" style="background: linear-gradient(135deg, #ff9800 0%, #f57c00 100%);">üìà –ü–õ–ê–ù–û–í–ê–Ø –ü–†–ò–ë–´–õ–¨ (–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–æ—á–Ω–æ)</h3>
            <div class="section-content">
                <div class="form-row" style="background: linear-gradient(135deg, #fff8e1 0%, #ffecb3 100%); border: 2px solid #ffa000;">
                    <span style="background: #ff9800; color: white; padding: 6px 12px; border-radius: 6px; font-weight: bold;">PROFIT</span>
                    <span class="description"><strong>–ü–ª–∞–Ω–æ–≤–∞—è –ø—Ä–∏–±—ã–ª—å = –í—ã—Ä—É—á–∫–∞ (41) - –ó–∞—Ç—Ä–∞—Ç—ã (81)</strong><br><small>Orientierungsgewinn = Umsatz (41) - Kosten (81)</small><br><em>‚ö†Ô∏è –ù–µ –≤–∫–ª—é—á–∞–µ—Ç –≤—Å–µ –∑–∞—Ç—Ä–∞—Ç—ã - —Ç–æ–ª—å–∫–æ –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–æ—á–Ω–æ!</em></span>
                    <div class="input-group">
                        <input type="number" id="plannedProfit" class="calculated" readonly style="font-size: 18px; font-weight: bold; color: #e65100;">
                        <span style="color: #e65100; font-size: 14px; font-weight: bold;">‚Ç¨</span>
                    </div>
                </div>
                
                <div style="background: #f5f5f5; padding: 15px; border-radius: 8px; margin-top: 15px; font-size: 13px;">
                    <strong>üìä –î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è —Ä–∞—Å—á–µ—Ç–∞ –ø—Ä–∏–±—ã–ª–∏:</strong><br>
                    <span id="profitBreakdown"></span>
                </div>
            </div>
        </div>

        <!-- –ö–û–î 83 - –ò–¢–û–ì–û -->
        <div class="section" style="background: linear-gradient(135deg, #e8f5e8 0%, #c8e6c9 100%); border: 3px solid #4caf50;">
            <h3 class="section-header" style="background: linear-gradient(135deg, #4caf50 0%, #388e3c 100%);">üéØ –ö–û–î 83 - Zahllast (–ò–¢–û–ì–û)</h3>
            <div class="section-content">
                <div class="form-row total-row">
                    <span class="code">83</span>
                    <span class="description"><strong>–ö –¥–æ–ø–ª–∞—Ç–µ (+) / –ö –≤–æ–∑–≤—Ä–∞—Ç—É (-)</strong><br><small>Verbleibende Umsatzsteuer-Vorauszahlung</small><br><em>83 = 41c - (66 + 62 + 67)</em></span>
                    <div class="input-group">
                        <input type="number" id="field83" class="calculated" readonly style="font-size: 18px; font-weight: bold;">
                        <span style="color: #666; font-size: 14px; font-weight: bold;">‚Ç¨</span>
                    </div>
                </div>
            </div>
        </div>

        <div id="result" class="result-box" style="display: none;">
            <h3>üìä –†–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞—Å—á–µ—Ç–∞ –ù–î–°:</h3>
            <p id="resultText"></p>
        </div>

        <!-- –ö–ù–û–ü–ö–ò –≠–ö–°–ü–û–†–¢–ê -->
        <div class="section" style="background: linear-gradient(135deg, #f3e5f5 0%, #e1bee7 100%); border: 3px solid #9c27b0;">
            <h3 class="section-header" style="background: linear-gradient(135deg, #9c27b0 0%, #7b1fa2 100%);">üíæ –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö</h3>
            <div class="section-content">
                <div class="export-grid">
                    <button onclick="printDeclaration()" class="export-btn export-btn-print">
                        üñ®Ô∏è –†–∞—Å–ø–µ—á–∞—Ç–∞—Ç—å –¥–µ–∫–ª–∞—Ä–∞—Ü–∏—é
                    </button>
                    
                    <button onclick="exportToPDF()" class="export-btn export-btn-pdf">
                        üìÑ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ PDF
                    </button>
                    
                    <button onclick="exportToExcel()" class="export-btn export-btn-excel">
                        üìä –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ Excel
                    </button>
                    
                    <button onclick="exportToJSON()" class="export-btn export-btn-json">
                        üíæ –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö JSON
                    </button>
                </div>
                
                <div style="background: #f5f5f5; padding: 15px; border-radius: 8px; margin-top: 15px; font-size: 12px; color: #666;">
                    <strong>üìã –ú–æ–¥—É–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞:</strong><br>
                    üñ®Ô∏è –ü–µ—á–∞—Ç—å - –º–æ–¥—É–ª—å export-manager.js<br>
                    üìÑ PDF - –≤—Å—Ç—Ä–æ–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –±—Ä–∞—É–∑–µ—Ä–∞<br>
                    üìä Excel - CSV —ç–∫—Å–ø–æ—Ä—Ç —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π —Ä—É—Å—Å–∫–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤<br>
                    üíæ JSON - –ø–æ–ª–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–π<br>
                    üîÑ –ö–æ–º–ø–∞–Ω–∏–∏ - –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∞ –∏–∑ data/companies.json
                </div>
            </div>
        </div>

        <!-- Footer -->
        <div style="text-align: center; margin-top: 30px; padding: 20px; background: #f5f5f5; border-radius: 8px; font-size: 12px; color: #666;">
            <strong>üöÄ IT AI SOLAR Dashka SmartStb v2.0</strong><br>
            <!-- –ú–æ–¥—É–ª—å–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ | Deployed via /solar/deploy.yml<br> -->
            <strong>Team:</strong> Leanid (architect) ‚Üí Dasha (senior) ‚Üí Jimmy (developer)<br>
            <!-- <strong>Modules:</strong> vat-calculator.js | export-manager.js | data-loader.js | dashka-styles.css -->
        </div>
    </div>

    <!-- –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –º–æ–¥—É–ª—å–Ω—ã—Ö —Å–∫—Ä–∏–ø—Ç–æ–≤ -->
    <script src="js/data-loader.js"></script>
    <script src="js/vat-calculator.js"></script>
    <script src="js/export-manager.js"></script>
    
    <script>
        // –ì–ª–æ–±–∞–ª—å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
        window.addEventListener('load', function() {
            console.log('üöÄ IT AI SOLAR Dashka SmartStb v2.0 - Fully Loaded');
            console.log('üìÅ Modular Architecture Active');
            console.log('üë• Team: Leonid ‚Üí Dasha ‚Üí Claude ‚Üí Jimmy');
        });
    </script>
</body>
</html>
=== ./docs/README.md ===
Hamburg, Grosbrook 19, Germany, 20457