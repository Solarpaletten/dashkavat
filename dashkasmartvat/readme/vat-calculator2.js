/**
 * IT AI SOLAR Dashka SmartStb - VAT Calculator Module
 * –ú–æ–¥—É–ª—å —Ä–∞—Å—á–µ—Ç–∞ –ù–î–° –¥–ª—è –Ω–µ–º–µ—Ü–∫–∏—Ö –¥–µ–∫–ª–∞—Ä–∞—Ü–∏–π (–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)
 * @author Dasha's Team & Jimmy
 * @version 2.0.1
 */

class VATCalculator {
    constructor() {
        this.vatRate19 = 0.19;
        this.initialized = false;
    }

    init() {
        if (this.initialized) return;
        
        this.setupEventListeners();
        this.loadDefaultData();
        this.initialized = true;
        console.log('üöÄ VAT Calculator initialized v2.0.1');
    }

    setupEventListeners() {
        const inputFields = [
            'field10', 'field40a', 'field40b', 'field41a', 'field41b', 'field43',
            'field81a', 'field81b', 'field89a', 'field89b', 
            'field66', 'field62', 'field67'
        ];

        inputFields.forEach(fieldId => {
            const element = document.getElementById(fieldId);
            if (element) {
                element.addEventListener('input', () => this.handleInputChange(fieldId));
            }
        });
    }

    handleInputChange(fieldId) {
        // –ü–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ–º –≤—Å–µ –ø–æ–ª—è –ø—Ä–∏ –ª—é–±–æ–º –∏–∑–º–µ–Ω–µ–Ω–∏–∏
        this.calculateAllFields();
    }

    getFieldValue(fieldId) {
        const element = document.getElementById(fieldId);
        return parseFloat(element?.value) || 0;
    }

    setFieldValue(fieldId, value) {
        const element = document.getElementById(fieldId);
        if (element) {
            element.value = value.toFixed(2);
        }
    }

    // –ù–æ–≤–∞—è –ª–æ–≥–∏–∫–∞ —Ä–∞—Å—á–µ—Ç–æ–≤ —Å–æ–≥–ª–∞—Å–Ω–æ –≤–∞—à–µ–º—É –∫–æ–¥—É
    calculateAllFields() {
        // 1. –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º field41 (–æ–±—â–∏–π 41)
        const field41a = this.getFieldValue('field41a');
        const field41b = this.getFieldValue('field41b');
        const field41 = field41a + field41b;
        this.setFieldValue('field41', field41);

        // 2. –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º field81 (–æ–±—â–∏–π 81)
        const field81a = this.getFieldValue('field81a');
        const field81b = this.getFieldValue('field81b');
        const field81 = field81a + field81b;
        this.setFieldValue('field81', field81);

        // 3. –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º field4 (–æ–±—â–∞—è –≤—ã—Ä—É—á–∫–∞)
        const field40a = this.getFieldValue('field40a');
        const field40b = this.getFieldValue('field40b');
        const field43 = this.getFieldValue('field43');
        const field4 = field40a + field40b + field41 + field43;
        this.setFieldValue('field4', field4);

        // 4. –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º field8 (–æ–±—â–∏–µ –∑–∞—Ç—Ä–∞—Ç—ã)
        const field89a = this.getFieldValue('field89a');
        const field89b = this.getFieldValue('field89b');
        const field8 = field81a + field81b + field89a + field89b;
        this.setFieldValue('field8', field8);

        // 5. –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –ù–î–° –ø–æ–ª—è
        const field81c = field81a * this.vatRate19; // –ù–î–° —Å 81a
        const field41c = field41b * this.vatRate19; // –ù–î–° —Å 41b
        const field66a = field40a * this.vatRate19; // –ù–î–° —Å 40a
        const field61 = (field89a + field89b) * this.vatRate19; // –ù–î–° —Å –ï–°

        this.setFieldValue('field81c', field81c);
        this.setFieldValue('field41c', field41c);
        this.setFieldValue('field66a', field66a);
        this.setFieldValue('field61', field61);

        // 6. –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –æ–±—â–∏–π –∑–∞—á–µ—Ç–Ω—ã–π –ù–î–° (field62)
        const field66 = this.getFieldValue('field66');
        const field67 = this.getFieldValue('field67');
        const field62 = field66 + field61 + field67;
        this.setFieldValue('field62', field62);

        // 7. –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º field83 (–ö –¥–æ–ø–ª–∞—Ç–µ/–≤–æ–∑–≤—Ä–∞—Ç—É)
        // –ë–µ—Ä–µ–º –ù–î–° –æ—Ç —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –∏–∑ —Å—Ç—Ä–æ–∫–∏ 40a –∏ –º–∏–Ω—É—Å—É–µ–º –∑–∞—á–µ—Ç–Ω—ã–π –ù–î–° 62
        const outputVat = field66a; // –¢–æ–ª—å–∫–æ –ù–î–° —Å –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏
        const field83 = outputVat - field62;
        this.setFieldValue('field83', field83);

        // 8. –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –ø–ª–∞–Ω–æ–≤—É—é –ø—Ä–∏–±—ã–ª—å
        const plannedProfit = field4 - field8;
        this.setFieldValue('plannedProfit', plannedProfit);

        // 9. –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
        this.renderResult(field83, field81c, field41c, outputVat, field62, plannedProfit);

        console.log('[SmartVat –†–∞—Å—á–µ—Ç]', {
            field4, field8, field66a, field61, field62, field83, plannedProfit
        });

        return { field83, outputVat, field62, plannedProfit };
    }

    renderResult(balance, vat81c, vat41c, totalOutputVat, totalInputVat, plannedProfit) {
        const resultDiv = document.getElementById('result');
        const resultText = document.getElementById('resultText');
        
        if (!resultDiv || !resultText) return;
        
        const field81a = this.getFieldValue('field81a');
        const field41b = this.getFieldValue('field41b');
        const field40a = this.getFieldValue('field40a');
        const field4 = this.getFieldValue('field4');
        const field8 = this.getFieldValue('field8');
        
        let statusHTML = '';
        let statusColor = '';
        
        if (balance > 0) {
            statusHTML = `üí∏ –ö –î–û–ü–õ–ê–¢–ï: ${balance.toFixed(2)} ‚Ç¨`;
            statusColor = '#d32f2f';
        } else if (balance < 0) {
            statusHTML = `üí∞ –ö –í–û–ó–í–†–ê–¢–£: ${Math.abs(balance).toFixed(2)} ‚Ç¨`;
            statusColor = '#388e3c';
        } else {
            statusHTML = `‚öñÔ∏è –ë–ê–õ–ê–ù–°: 0.00 ‚Ç¨`;
            statusColor = '#1976d2';
        }
        
        resultText.innerHTML = `
            <strong style="color: ${statusColor}; font-size: 20px;">${statusHTML}</strong><br><br>
            <div style="text-align: left; background: #f5f5f5; padding: 15px; border-radius: 8px;">
                üìä <strong>–†–∞—Å—á–µ—Ç –ù–î–° –ø–æ –ø–æ—Ä—è–¥–∫—É:</strong><br><br>
                
                <strong>1. –í—ã—Ä—É—á–∫–∞ (field 4):</strong> ${field4.toFixed(2)} ‚Ç¨ 
                <small>(40a + 40b + 41 + 43)</small><br>
                
                <strong>2. –ó–∞—Ç—Ä–∞—Ç—ã (field 8):</strong> ${field8.toFixed(2)} ‚Ç¨ 
                <small>(81a + 81b + 89a + 89b)</small><br><br>
                
                <strong>3. –ù–î–° –∫ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—é:</strong><br>
                ‚Ä¢ 81c (19% —Å ${field81a.toFixed(2)}‚Ç¨): ${vat81c.toFixed(2)} ‚Ç¨ <em>(–Ω–µ –≤ 83)</em><br>
                ‚Ä¢ 41c (19% —Å ${field41b.toFixed(2)}‚Ç¨): ${vat41c.toFixed(2)} ‚Ç¨ <em>(–Ω–µ –≤ 83)</em><br>
                ‚Ä¢ 66a (19% —Å ${field40a.toFixed(2)}‚Ç¨): <strong>${totalOutputVat.toFixed(2)} ‚Ç¨</strong> <em>(–∏–¥–µ—Ç –≤ 83)</em><br><br>
                
                <strong>4. –ó–∞—á–µ—Ç–Ω—ã–π –ù–î–° (field 62):</strong> ${totalInputVat.toFixed(2)} ‚Ç¨ 
                <small>(66 + 61 + 67)</small><br><br>
                
                <div style="background: rgba(255,255,255,0.8); padding: 15px; border-radius: 8px; border-left: 4px solid #1976d2;">
                    <strong>Field 83 = ${totalOutputVat.toFixed(2)} - ${totalInputVat.toFixed(2)} = ${balance.toFixed(2)} ‚Ç¨</strong><br>
                    <em>–ë–µ—Ä–µ–º –ù–î–° –æ—Ç 40a –∏ –º–∏–Ω—É—Å—É–µ–º –≤–µ—Å—å –∑–∞—á–µ—Ç–Ω—ã–π –ù–î–° 62</em>
                </div><br>
                
                üìà <strong style="color: ${plannedProfit >= 0 ? '#388e3c' : '#d32f2f'};">–ü–ª–∞–Ω–æ–≤–∞—è –ø—Ä–∏–±—ã–ª—å: ${plannedProfit.toFixed(2)} ‚Ç¨</strong>
                <small>(–≤—ã—Ä—É—á–∫–∞ ${field4.toFixed(2)} ‚Ç¨ - –∑–∞—Ç—Ä–∞—Ç—ã ${field8.toFixed(2)} ‚Ç¨)</small>
            </div>
        `;
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ—Ñ–∏—Ç –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –±–ª–æ–∫–µ
        this.updateProfitBreakdown(field4, field8, plannedProfit);
        
        resultDiv.style.display = 'block';
    }

    updateProfitBreakdown(revenue, costs, profit) {
        const profitBreakdown = document.getElementById('profitBreakdown');
        if (profitBreakdown) {
            const profitColor = profit >= 0 ? '#388e3c' : '#d32f2f';
            const profitIcon = profit >= 0 ? 'üìà' : 'üìâ';
            
            profitBreakdown.innerHTML = `
                –û–±—â–∞—è –≤—ã—Ä—É—á–∫–∞ (4): <strong style="color: #388e3c;">${revenue.toFixed(2)} ‚Ç¨</strong><br>
                –û–±—â–∏–µ –∑–∞—Ç—Ä–∞—Ç—ã (8): <strong style="color: #d32f2f;">${costs.toFixed(2)} ‚Ç¨</strong><br>
                ${profitIcon} <strong style="color: ${profitColor};">–ü–ª–∞–Ω–æ–≤–∞—è –ø—Ä–∏–±—ã–ª—å: ${profit.toFixed(2)} ‚Ç¨</strong>
            `;
        }
    }

    loadDefaultData() {
        const defaultData = {
            field10: 0,
            field40a: 18400.00,
            field40b: 0.00,
            field41: 0.00,
            field43: 0.00,
            field4: 18400.00,
            field81a: 133.56, // –í–µ—Å—å –ù–î–° –ø–æ –ø–æ–∫—É–ø–∫–µ –≤ –ì–µ—Ä–º–∞–Ω–∏–∏
            field81b: 0, // –≠—Ç–æ —É –Ω–∞—Å –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –∏ —É—Å–ª—É–≥ –≤–Ω—É—Ç—Ä–∏ –ì–µ—Ä–º–∞–Ω–∏–∏ –±–µ–∑ –ù–î–° –∑–¥–µ—Å—å —Ç–æ–ª—å–∫–æ —Ç–æ–≤–∞—Ä –±–µ–∑ –ù–î–°
            field89a: 15755.00, // –≠—Ç–æ —É –Ω–∞—Å –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –≤–Ω—É—Ç—Ä–∏ –ï–≤—Ä–æ—Å–æ—é–∑–∞ –ø–æ –Ω—É–ª–µ–≤–æ–π —Å—Ç–∞–≤–∫–∏ –ù–î–° –æ—Ç—Ä–∞–∂–∞–µ—Ç—Å—è –Ω–∞—á–∏—Å–ª–µ–Ω—ã –≤ —Å—Ç—Ä–æ–∫–µ 61
            field89b: 484.96, // –æ–ø–ª–∞—Ç–∞ –ø–æ—à–ª–∏–Ω—ã –∫–æ—Ç–æ—Ä—ã–µ –¥–æ–±–∞–≤–ª—è—é—Ç—Å—è –∫ —Å–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∏–º–ø–æ—Ä—Ç–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ 
            field83: 0.00, // —ç—Ç–æ —É –Ω–∞—Å
            field8: 16373.52, // 133,56+15755+484,96
            field66: 25.38, // —Å—É–º–º–∞ –ù–î–°  
            field61: 3085.59, // (15755+484.96)*19/100=3085,59
            field67: 0,
            field62: 3110.97 // 25,38+3085,59+0=3110,97
        };

        Object.entries(defaultData).forEach(([fieldId, value]) => {
            this.setFieldValue(fieldId, value);
        });

        this.calculateAllFields();
    }

    exportData() {
        return {
            company: {
                name: 'ASSET LOGISTICS GMBH',
                address: 'Kurze Stra√üe 6, 06366 K√∂then',
                hrb: '34481',
                steuernummer: 'DE453202061'
            },
            period: 'M√§rz 2025',
            timestamp: new Date().toISOString(),
            software: 'IT AI SOLAR Dashka SmartStb v2.0.1',
            data: {
                field10: this.getFieldValue('field10'), // –ù–æ–º–µ—Ä –¥–µ–∫–ª–∞—Ä–∞—Ü–∏–∏
                field40a: this.getFieldValue('field40a'),// —ç—Ç–æ —É –Ω–∞—Å —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è —Å –ù–î–° –≤–Ω—É—Ç—Ä–∏ –ì–µ—Ä–º–∞–Ω–∏–∏ –û—Ç–∞—Ä –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º –æ–±—ä–µ–º —Å—É–º–º—ã –±–µ–∑ –ù–î–°
                field40b: this.getFieldValue('field40b'),// –≠—Ç–æ —É –Ω–∞—Å —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –±–µ–∑ –ù–î–° –≤–Ω—É—Ç—Ä–∏ –ì–µ—Ä–º–∞–Ω–∏–∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å—É–º–º—É –±–µ–∑ –ù–î–°
                field41: this.getFieldValue('field41'), // —ç—Ç–æ —É –Ω–∞—Å —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –≤–Ω—É—Ç—Ä–∏ –ï–≤—Ä–æ—Å–æ—é–∑–∞ –ß–µ—Ö–∏—è –ü–æ–ª—å—à–∞ –ù–æ—Ä–≤–µ–≥–∏—è –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å—É–º–º—É –±–µ–∑ –ù–î–° —Å –Ω—É–ª–µ–≤–æ–π —Å—Ç–∞–≤–∫–æ–π –ù–î–°
                field43: this.getFieldValue('field43'), // —ç—Ç–æ —É –Ω–∞—Å —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –≤ —Ç—Ä–µ—Ç—å–∏ —Å—Ç—Ä–∞–Ω—ã –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å—É–º–º—É –±–µ–∑ –ù–î–° —Å –Ω—É–ª–µ–≤–æ–π —Å—Ç–∞–≤–∫–æ–π –ù–î–°
                field4: this.getFieldValue('field4'), // –≠—Ç–æ —É –Ω–∞—Å —Å—É–º–º–∞ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ —Ç–æ–≤–∞—Ä–∞ –∏–º–µ–Ω–Ω–æ –≤—ã—Ä—É—á–∫–∏ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –æ–±—â–µ–π –≤—ã—Ä—É—á–∫–∏ –¥–ª—è —Ä–∞—Å—á—ë—Ç–∞ –ø—Ä–∏–±—ã–ª–∏ 
                field81a: this.getFieldValue('field81a'), // –£ –Ω–∞—Å –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–∏–µ –≤–Ω—É—Ç—Ä–∏ –ì–µ—Ä–º–∞–Ω–∏–∏ –∑–¥–µ—Å—å –≤–∫–ª—é—á—ë–Ω —Ç–æ–ª—å–∫–æ –Ω–µ—Ç—Ç–æ —Ç–æ–≤–∞—Ä–∞ –±–µ–∑ –ù–î–°
                field81b: this.getFieldValue('field81b'), // –≠—Ç–æ —É –Ω–∞—Å –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –∏ —É—Å–ª—É–≥ –≤–Ω—É—Ç—Ä–∏ –ì–µ—Ä–º–∞–Ω–∏–∏ –±–µ–∑ –ù–î–° –∑–¥–µ—Å—å —Ç–æ–ª—å–∫–æ —Ç–æ–≤–∞—Ä –±–µ–∑ –ù–î–° 
                field89a: this.getFieldValue('field89a'), // –ü—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–∏–µ –≤–Ω—É—Ç—Ä–∏ –ï–° –ø–æ 0% –ù–î–°
                field89b: this.getFieldValue('field89b'), // –ò–º–ø–æ—Ä—Ç–Ω—ã–µ –ø–æ—à–ª–∏–Ω—ã
                field8: this.getFieldValue('field8'), // –≠—Ç–æ —É –Ω–∞—Å —Å—É–º–º–∞ –æ–±—â–µ–≥–æ –Ω–µ—Ç—Ç–æ –ø—Ä–∏–æ–±—Ä–µ—Ç—ë–Ω–Ω–æ–≥–æ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç–∏ –ø–æ–∫—É–ø–Ω–æ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –¥–ª—è —Ä–∞—Å—á—ë—Ç–∞ –ø—Ä–∏–±—ã–ª–∏ 
                field66: this.getFieldValue('field66'), // –≠—Ç–æ —É –Ω–∞—Å —Å—É–º–º–∞ –ù–î–° —Å—Ç—Ä–æ–∫–µ 40 –∞ 
                field61: this.getFieldValue('field61'), // –≠—Ç–æ —É –Ω–∞—Å —Å—É–º–º–∞ –∏–º–ø–æ—Ä—Ç–Ω–æ–≥–æ –ù–î–° –ø—Ä–∏–æ–±—Ä–µ—Ç—ë–Ω–Ω–æ–≥–æ –≤–Ω—É—Ç—Ä–∏ –ï–≤—Ä–æ—Å–æ—é–∑–∞ —Ç–æ–≤–∞—Ä–∞ 
                field67: this.getFieldValue('field67'), // –£ –Ω–∞—Å —Å—É–º–º–∞ –∏–º–ø–æ—Ä—Ç–Ω–æ–≥–æ –ù–î–° –ø—Ä–∏–æ–±—Ä–µ—Ç—ë–Ω–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ –∏–∑ —Ç—Ä–µ—Ç—å–∏—Ö —Å—Ç—Ä–∞–Ω
                field62: this.getFieldValue('field62'), // –≠—Ç–æ —É –Ω–∞—Å —Å—É–º–º–∞ 61 66 67 
                field83: this.getFieldValue('field83'), // –°—É–º–º–∞ –ù–î–° –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ —É–ø–ª–∞—Ç–∏—Ç—å —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –∏–∑ —Å—Ç—Ä–æ–∫–∏ –±–µ—Ä—ë–º 40a –ò –º–∏–Ω—É—Å—É–µ–º –≤—Å–µ —á—Ç–æ —É –Ω–∞—Å –µ—Å—Ç—å –ø–æ –∑–∞—á–µ—Ç–Ω–æ–º –Ω–¥—Å 62 
                plannedProfit: this.getFieldValue('plannedProfit')
            },
            calculations: this.calculateAllFields()
        };
    }

    // –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–¥–µ–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
    updateTotal81() {
        this.calculateAllFields();
    }

    updateTotal41() {
        this.calculateAllFields();
    }

    calculateTax() {
        return this.calculateAllFields();
    }

    calculateProfit() {
        const field4 = this.getFieldValue('field4');
        const field8 = this.getFieldValue('field8');
        return field4 - field8;
    }
}

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
let vatCalculator;

function updateTotal81() {
    vatCalculator?.updateTotal81();
}

function updateTotal41() {
    vatCalculator?.updateTotal41();
}

function calculateTax() {
    return vatCalculator?.calculateTax();
}

function loadRealData() {
    vatCalculator?.loadDefaultData();
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
document.addEventListener('DOMContentLoaded', function() {
    vatCalculator = new VATCalculator();
    window.vatCalculator = vatCalculator; // –ì–ª–æ–±–∞–ª—å–Ω—ã–π –¥–æ—Å—Ç—É–ø
    vatCalculator.init();
});

console.log("‚úÖ Dashka SmartStb VAT Module v2.0.1 ‚Äî ready for launch");